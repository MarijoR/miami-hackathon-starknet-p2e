{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Contract = void 0;\n\nvar bn_js_1 = __importDefault(require(\"bn.js\"));\n\nvar minimalistic_assert_1 = __importDefault(require(\"minimalistic-assert\"));\n\nvar provider_1 = require(\"../provider\");\n\nvar number_1 = require(\"../utils/number\");\n\nfunction parseFelt(candidate) {\n  try {\n    return (0, number_1.toBN)(candidate);\n  } catch (e) {\n    throw Error('Couldnt parse felt');\n  }\n}\n/**\n * Adds call methods to the contract\n *\n */\n\n\nfunction buildCall(contract, functionAbi) {\n  return function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , contract.call(functionAbi.name, args)];\n      });\n    });\n  };\n}\n/**\n * Adds invoke methods to the contract\n *\n */\n\n\nfunction buildInvoke(contract, functionAbi) {\n  return function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var inputs, inputsLength, options;\n      return __generator(this, function (_a) {\n        inputs = functionAbi.inputs;\n        inputsLength = inputs.reduce(function (acc, input) {\n          if (!/_len$/.test(input.name)) {\n            return acc + 1;\n          }\n\n          return acc;\n        }, 0);\n        options = {};\n\n        if (inputsLength + 1 === args.length && typeof args[args.length - 1] === 'object') {\n          Object.assign(options, args.pop());\n        }\n\n        return [2\n        /*return*/\n        , contract.invoke(functionAbi.name, args, options)];\n      });\n    });\n  };\n}\n/**\n * Adds call/invoke methods to the contract\n *\n */\n\n\nfunction buildDefault(contract, functionAbi) {\n  if (functionAbi.stateMutability === 'view') {\n    return buildCall(contract, functionAbi);\n  }\n\n  return buildInvoke(contract, functionAbi);\n}\n/**\n * Adds populate for methods to the contract\n *\n */\n\n\nfunction buildPopulate(contract, functionAbi) {\n  return function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    return contract.populate(functionAbi.name, args);\n  };\n}\n/**\n * Adds estimateFee for methods to the contract\n *\n */\n\n\nfunction buildEstimate(contract, functionAbi) {\n  return function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    return contract.estimate(functionAbi.name, args);\n  };\n}\n\nvar Contract =\n/** @class */\nfunction () {\n  /**\n   * Contract class to handle contract methods\n   *\n   * @param abi - Abi of the contract object\n   * @param address (optional) - address to connect to\n   * @param providerOrAccount (optional) - Provider or Account to attach to\n   */\n  function Contract(abi, address, providerOrAccount) {\n    var _this = this;\n\n    if (providerOrAccount === void 0) {\n      providerOrAccount = provider_1.defaultProvider;\n    }\n\n    this.address = address;\n    this.providerOrAccount = providerOrAccount;\n    this.abi = abi;\n    this.structs = abi.filter(function (abiEntry) {\n      return abiEntry.type === 'struct';\n    }).reduce(function (acc, abiEntry) {\n      var _a;\n\n      return __assign(__assign({}, acc), (_a = {}, _a[abiEntry.name] = abiEntry, _a));\n    }, {});\n    Object.defineProperty(this, 'functions', {\n      enumerable: true,\n      value: {},\n      writable: false\n    });\n    Object.defineProperty(this, 'callStatic', {\n      enumerable: true,\n      value: {},\n      writable: false\n    });\n    Object.defineProperty(this, 'populateTransaction', {\n      enumerable: true,\n      value: {},\n      writable: false\n    });\n    Object.defineProperty(this, 'estimateFee', {\n      enumerable: true,\n      value: {},\n      writable: false\n    });\n    this.abi.forEach(function (abiElement) {\n      if (abiElement.type !== 'function') {\n        return;\n      }\n\n      var signature = abiElement.name;\n\n      if (!_this[signature]) {\n        Object.defineProperty(_this, signature, {\n          enumerable: true,\n          value: buildDefault(_this, abiElement),\n          writable: false\n        });\n      }\n\n      if (!_this.functions[signature]) {\n        Object.defineProperty(_this.functions, signature, {\n          enumerable: true,\n          value: buildDefault(_this, abiElement),\n          writable: false\n        });\n      }\n\n      if (!_this.callStatic[signature]) {\n        Object.defineProperty(_this.callStatic, signature, {\n          enumerable: true,\n          value: buildCall(_this, abiElement),\n          writable: false\n        });\n      }\n\n      if (!_this.populateTransaction[signature]) {\n        Object.defineProperty(_this.populateTransaction, signature, {\n          enumerable: true,\n          value: buildPopulate(_this, abiElement),\n          writable: false\n        });\n      }\n\n      if (!_this.estimateFee[signature]) {\n        Object.defineProperty(_this.estimateFee, signature, {\n          enumerable: true,\n          value: buildEstimate(_this, abiElement),\n          writable: false\n        });\n      }\n    });\n  }\n  /**\n   * Saves the address of the contract deployed on network that will be used for interaction\n   *\n   * @param address - address of the contract\n   */\n\n\n  Contract.prototype.attach = function (address) {\n    this.address = address;\n  };\n  /**\n   * Attaches to new Provider or Account\n   *\n   * @param providerOrAccount - new Provider or Account to attach to\n   */\n\n\n  Contract.prototype.connect = function (providerOrAccount) {\n    this.providerOrAccount = providerOrAccount;\n  };\n  /**\n   * Resolves when contract is deployed on the network or when no deployment transaction is found\n   *\n   * @returns Promise that resolves when contract is deployed on the network or when no deployment transaction is found\n   * @throws When deployment fails\n   */\n\n\n  Contract.prototype.deployed = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!this.deployTransactionHash) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , this.providerOrAccount.waitForTransaction(this.deployTransactionHash)];\n\n          case 1:\n            _a.sent();\n\n            this.deployTransactionHash = undefined;\n            _a.label = 2;\n\n          case 2:\n            return [2\n            /*return*/\n            , this];\n        }\n      });\n    });\n  };\n  /**\n   * Validates if all arguments that are passed to the method are corresponding to the ones in the abi\n   *\n   * @param type - type of the method\n   * @param method  - name of the method\n   * @param args - arguments that are passed to the method\n   */\n\n\n  Contract.prototype.validateMethodAndArgs = function (type, method, args) {\n    var _this = this;\n\n    if (args === void 0) {\n      args = [];\n    } // ensure provided method exists\n\n\n    var invokeableFunctionNames = this.abi.filter(function (abi) {\n      if (abi.type !== 'function') return false;\n      var isView = abi.stateMutability === 'view';\n      return type === 'INVOKE' ? !isView : isView;\n    }).map(function (abi) {\n      return abi.name;\n    });\n    (0, minimalistic_assert_1.default)(invokeableFunctionNames.includes(method), (type === 'INVOKE' ? 'invokeable' : 'viewable') + \" method not found in abi\"); // ensure args match abi type\n\n    var methodAbi = this.abi.find(function (abi) {\n      return abi.name === method && abi.type === 'function';\n    });\n    var argPosition = 0;\n    methodAbi.inputs.forEach(function (input) {\n      if (/_len$/.test(input.name)) {\n        return;\n      }\n\n      if (input.type === 'felt') {\n        (0, minimalistic_assert_1.default)(typeof args[argPosition] === 'string' || typeof args[argPosition] === 'number' || args[argPosition] instanceof bn_js_1.default, \"arg \" + input.name + \" should be a felt (string, number, BigNumber)\");\n        argPosition += 1;\n      } else if (input.type in _this.structs && typeof args[argPosition] === 'object') {\n        if (Array.isArray(args[argPosition])) {\n          var structMembersLength = _this.calculateStructMembers(input.type);\n\n          (0, minimalistic_assert_1.default)(args[argPosition].length === structMembersLength, \"arg should be of length \" + structMembersLength);\n        } else {\n          _this.structs[input.type].members.forEach(function (_a) {\n            var name = _a.name;\n            (0, minimalistic_assert_1.default)(Object.keys(args[argPosition]).includes(name), \"arg should have a property \" + name);\n          });\n        }\n\n        argPosition += 1;\n      } else {\n        (0, minimalistic_assert_1.default)(Array.isArray(args[argPosition]), \"arg \" + input.name + \" should be an Array\");\n\n        if (input.type === 'felt*') {\n          args[argPosition].forEach(function (felt) {\n            (0, minimalistic_assert_1.default)(typeof felt === 'string' || typeof felt === 'number' || felt instanceof bn_js_1.default, \"arg \" + input.name + \" should be an array of string, number or BigNumber\");\n          });\n          argPosition += 1;\n        } else if (/\\(felt/.test(input.type)) {\n          var tupleLength = input.type.split(',').length;\n          (0, minimalistic_assert_1.default)(args[argPosition].length === tupleLength, \"arg \" + input.name + \" should have \" + tupleLength + \" elements in tuple\");\n          args[argPosition].forEach(function (felt) {\n            (0, minimalistic_assert_1.default)(typeof felt === 'string' || typeof felt === 'number' || felt instanceof bn_js_1.default, \"arg \" + input.name + \" should be an array of string, number or BigNumber\");\n          });\n          argPosition += 1;\n        } else {\n          var arrayType_1 = input.type.replace('*', '');\n          args[argPosition].forEach(function (struct) {\n            _this.structs[arrayType_1].members.forEach(function (_a) {\n              var name = _a.name;\n\n              if (Array.isArray(struct)) {\n                var structMembersLength = _this.calculateStructMembers(arrayType_1);\n\n                (0, minimalistic_assert_1.default)(struct.length === structMembersLength, \"arg should be of length \" + structMembersLength);\n              } else {\n                (0, minimalistic_assert_1.default)(Object.keys(struct).includes(name), \"arg \" + input.name + \" should be an array of \" + arrayType_1);\n              }\n            });\n          });\n          argPosition += 1;\n        }\n      }\n    });\n  };\n  /**\n   * Deep parse of the object that has been passed to the method\n   *\n   * @param struct - struct that needs to be calculated\n   * @return {number} - number of members for the given struct\n   */\n\n\n  Contract.prototype.calculateStructMembers = function (struct) {\n    var _this = this;\n\n    return this.structs[struct].members.reduce(function (acc, member) {\n      if (member.type === 'felt') {\n        return acc + 1;\n      }\n\n      return acc + _this.structMemberNum(member.type);\n    }, 0);\n  };\n  /**\n   * Deep parse of the object that has been passed to the method\n   *\n   * @param element - element that needs to be parsed\n   * @param type  - name of the method\n   * @return {string | string[]} - parsed arguments in format that contract is expecting\n   */\n\n\n  Contract.prototype.parseCalldataValue = function (element, type) {\n    var _this = this;\n\n    if (element === undefined) {\n      throw Error('Missing element in calldata');\n    }\n\n    if (Array.isArray(element)) {\n      var structMemberNum = this.calculateStructMembers(type);\n\n      if (element.length !== structMemberNum) {\n        throw Error('Missing element in calldata');\n      }\n\n      return element.map(function (el) {\n        return (0, number_1.toFelt)(el);\n      });\n    } // checking if the passed element is struct or element in struct\n\n\n    if (this.structs[type] && this.structs[type].members.length) {\n      // going through all the members of the struct and parsing the value\n      return this.structs[type].members.reduce(function (acc, member) {\n        // if the member of the struct is another struct this will return array of the felts if not it will be single felt\n        // TODO: refactor types so member name can be used as keyof ParsedStruct\n\n        /* @ts-ignore */\n        var parsedData = _this.parseCalldataValue(element[member.name], member.type);\n\n        if (typeof parsedData === 'string') {\n          acc.push(parsedData);\n        } else {\n          acc.push.apply(acc, __spreadArray([], __read(parsedData), false));\n        }\n\n        return acc;\n      }, []);\n    }\n\n    return (0, number_1.toFelt)(element);\n  };\n  /**\n   * Parse of the response elements that are converted to Object (Struct) by using the abi\n   *\n   * @param responseIterator - iterator of the response\n   * @param type - type of the struct\n   * @return {BigNumberish | ParsedStruct} - parsed arguments in format that contract is expecting\n   */\n\n\n  Contract.prototype.parseResponseStruct = function (responseIterator, type) {\n    var _this = this; // check the type of current element\n\n\n    if (type in this.structs && this.structs[type]) {\n      return this.structs[type].members.reduce(function (acc, el) {\n        // parse each member of the struct (member can felt or nested struct)\n        acc[el.name] = _this.parseResponseStruct(responseIterator, el.type);\n        return acc;\n      }, {});\n    }\n\n    return parseFelt(responseIterator.next().value);\n  };\n  /**\n   * Parse one field of the calldata by using input field from the abi for that method\n   *\n   * @param args - value of the field\n   * @param input  - input(field) information from the abi that will be used to parse the data\n   * @return {string | string[]} - parsed arguments in format that contract is expecting\n   */\n\n\n  Contract.prototype.parseCalldataField = function (argsIterator, input) {\n    var _this = this;\n\n    var name = input.name,\n        type = input.type;\n    var value = argsIterator.next().value;\n    var parsedCalldata = [];\n\n    switch (true) {\n      case /\\*/.test(type):\n        if (Array.isArray(value)) {\n          parsedCalldata.push((0, number_1.toFelt)(value.length));\n          return value.reduce(function (acc, el) {\n            if (/felt/.test(type)) {\n              acc.push((0, number_1.toFelt)(el));\n            } else {\n              acc.push.apply(acc, __spreadArray([], __read(_this.parseCalldataValue(el, type.replace('*', ''))), false));\n            }\n\n            return acc;\n          }, parsedCalldata);\n        }\n\n        throw Error(\"Expected \" + name + \" to be array\");\n\n      case type in this.structs:\n        return this.parseCalldataValue(value, type);\n\n      case /\\(felt/.test(type):\n        if (Array.isArray(value)) {\n          return value.map(function (el) {\n            return (0, number_1.toFelt)(el);\n          });\n        }\n\n        throw Error(\"Expected \" + name + \" to be array\");\n\n      default:\n        return (0, number_1.toFelt)(value);\n    }\n  };\n  /**\n   * Parse the calldata by using input fields from the abi for that method\n   *\n   * @param args - arguments passed the the method\n   * @param inputs  - list of inputs(fields) that are in the abi\n   * @return {Calldata} - parsed arguments in format that contract is expecting\n   */\n\n\n  Contract.prototype.compileCalldata = function (args, inputs) {\n    var _this = this;\n\n    var argsIterator = args[Symbol.iterator]();\n    return inputs.reduce(function (acc, input) {\n      if (/_len$/.test(input.name)) {\n        return acc;\n      }\n\n      var parsedData = _this.parseCalldataField(argsIterator, input);\n\n      if (Array.isArray(parsedData)) {\n        acc.push.apply(acc, __spreadArray([], __read(parsedData), false));\n      } else {\n        acc.push(parsedData);\n      }\n\n      return acc;\n    }, []);\n  };\n  /**\n   * Parse elements of the response and structuring them into one field by using output property from the abi for that method\n   *\n   * @param responseIterator - iterator of the response\n   * @param output  - output(field) information from the abi that will be used to parse the data\n   * @return - parsed response corresponding to the abi structure of the field\n   */\n\n\n  Contract.prototype.parseResponseField = function (responseIterator, output, parsedResult) {\n    var name = output.name,\n        type = output.type;\n    var parsedDataArr = [];\n\n    switch (true) {\n      case /_len$/.test(name):\n        return parseFelt(responseIterator.next().value).toNumber();\n\n      case /\\(felt/.test(type):\n        return type.split(',').reduce(function (acc) {\n          acc.push(parseFelt(responseIterator.next().value));\n          return acc;\n        }, []);\n\n      case /\\*/.test(type):\n        if (parsedResult && parsedResult[name + \"_len\"]) {\n          var arrLen = parsedResult[name + \"_len\"];\n\n          while (parsedDataArr.length < arrLen) {\n            parsedDataArr.push(this.parseResponseStruct(responseIterator, output.type.replace('*', '')));\n          }\n        }\n\n        return parsedDataArr;\n\n      case type in this.structs:\n        return this.parseResponseStruct(responseIterator, type);\n\n      default:\n        return parseFelt(responseIterator.next().value);\n    }\n  };\n  /**\n   * Parse elements of the response array and structuring them into response object\n   *\n   * @param method - method name\n   * @param response  - response from the method\n   * @return - parsed response corresponding to the abi\n   */\n\n\n  Contract.prototype.parseResponse = function (method, response) {\n    var _this = this;\n\n    var outputs = this.abi.find(function (abi) {\n      return abi.name === method;\n    }).outputs;\n    var responseIterator = response.flat()[Symbol.iterator]();\n    var resultObject = outputs.flat().reduce(function (acc, output) {\n      acc[output.name] = _this.parseResponseField(responseIterator, output, acc);\n\n      if (acc[output.name] && acc[output.name + \"_len\"]) {\n        delete acc[output.name + \"_len\"];\n      }\n\n      return acc;\n    }, {});\n    return Object.entries(resultObject).reduce(function (acc, _a) {\n      var _b = __read(_a, 2),\n          key = _b[0],\n          value = _b[1];\n\n      acc.push(value);\n      acc[key] = value;\n      return acc;\n    }, []);\n  };\n\n  Contract.prototype.invoke = function (method, args, options) {\n    if (args === void 0) {\n      args = [];\n    }\n\n    if (options === void 0) {\n      options = {};\n    } // ensure contract is connected\n\n\n    (0, minimalistic_assert_1.default)(this.address !== null, 'contract isnt connected to an address'); // validate method and args\n\n    this.validateMethodAndArgs('INVOKE', method, args);\n    var inputs = this.abi.find(function (abi) {\n      return abi.name === method;\n    }).inputs;\n    var inputsLength = inputs.reduce(function (acc, input) {\n      if (!/_len$/.test(input.name)) {\n        return acc + 1;\n      }\n\n      return acc;\n    }, 0);\n\n    if (args.length !== inputsLength) {\n      throw Error(\"Invalid number of arguments, expected \" + inputsLength + \" arguments, but got \" + args.length);\n    } // compile calldata\n\n\n    var calldata = this.compileCalldata(args, inputs);\n    var invocation = {\n      contractAddress: this.address,\n      calldata: calldata,\n      entrypoint: method\n    };\n\n    if ('execute' in this.providerOrAccount) {\n      return this.providerOrAccount.execute(invocation, undefined, {\n        maxFee: options.maxFee,\n        nonce: options.nonce\n      });\n    }\n\n    return this.providerOrAccount.invokeFunction(__assign(__assign({}, invocation), {\n      signature: options.signature || []\n    }));\n  };\n\n  Contract.prototype.call = function (method, args, _a) {\n    if (args === void 0) {\n      args = [];\n    }\n\n    var _b = _a === void 0 ? {} : _a,\n        _c = _b.blockIdentifier,\n        blockIdentifier = _c === void 0 ? 'pending' : _c;\n\n    return __awaiter(this, void 0, void 0, function () {\n      var inputs, calldata;\n\n      var _this = this;\n\n      return __generator(this, function (_d) {\n        // ensure contract is connected\n        (0, minimalistic_assert_1.default)(this.address !== null, 'contract isnt connected to an address'); // validate method and args\n\n        this.validateMethodAndArgs('CALL', method, args);\n        inputs = this.abi.find(function (abi) {\n          return abi.name === method;\n        }).inputs;\n        calldata = this.compileCalldata(args, inputs);\n        return [2\n        /*return*/\n        , this.providerOrAccount.callContract({\n          contractAddress: this.address,\n          calldata: calldata,\n          entrypoint: method\n        }, {\n          blockIdentifier: blockIdentifier\n        }).then(function (x) {\n          return _this.parseResponse(method, x.result);\n        })];\n      });\n    });\n  };\n\n  Contract.prototype.estimate = function (method, args) {\n    if (args === void 0) {\n      args = [];\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var invocation;\n\n      var _a;\n\n      return __generator(this, function (_b) {\n        //  TODO; remove error as soon as estimate fees are supported\n        // ensure contract is connected\n        (0, minimalistic_assert_1.default)(this.address !== null, 'contract isnt connected to an address'); // validate method and args\n\n        this.validateMethodAndArgs('INVOKE', method, args);\n        invocation = (_a = this.populateTransaction)[method].apply(_a, __spreadArray([], __read(args), false));\n\n        if ('estimateFee' in this.providerOrAccount) {\n          return [2\n          /*return*/\n          , this.providerOrAccount.estimateFee(invocation)];\n        }\n\n        throw Error('Contract must be connected to the account contract to estimate');\n      });\n    });\n  };\n\n  Contract.prototype.populate = function (method, args) {\n    if (args === void 0) {\n      args = [];\n    }\n\n    var inputs = this.abi.find(function (abi) {\n      return abi.name === method;\n    }).inputs;\n    return {\n      contractAddress: this.address,\n      entrypoint: method,\n      calldata: this.compileCalldata(args, inputs),\n      signature: []\n    };\n  };\n\n  return Contract;\n}();\n\nexports.Contract = Contract;","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","__generator","body","_","label","sent","trys","ops","f","y","g","verb","Symbol","iterator","v","op","TypeError","pop","push","__read","o","m","r","ar","error","__spreadArray","to","from","pack","l","Array","slice","concat","__importDefault","mod","__esModule","defineProperty","exports","Contract","bn_js_1","require","minimalistic_assert_1","provider_1","number_1","parseFelt","candidate","toBN","Error","buildCall","contract","functionAbi","args","_i","_a","name","buildInvoke","inputs","inputsLength","options","reduce","acc","input","test","invoke","buildDefault","stateMutability","buildPopulate","populate","buildEstimate","estimate","abi","address","providerOrAccount","_this","defaultProvider","structs","filter","abiEntry","type","enumerable","writable","forEach","abiElement","signature","functions","callStatic","populateTransaction","estimateFee","attach","connect","deployed","deployTransactionHash","waitForTransaction","undefined","validateMethodAndArgs","method","invokeableFunctionNames","isView","map","default","includes","methodAbi","find","argPosition","isArray","structMembersLength","calculateStructMembers","members","keys","felt","tupleLength","split","arrayType_1","replace","struct","member","structMemberNum","parseCalldataValue","element","el","toFelt","parsedData","parseResponseStruct","responseIterator","parseCalldataField","argsIterator","parsedCalldata","compileCalldata","parseResponseField","output","parsedResult","parsedDataArr","toNumber","arrLen","parseResponse","response","outputs","flat","resultObject","entries","_b","key","calldata","invocation","contractAddress","entrypoint","execute","maxFee","nonce","invokeFunction","_c","blockIdentifier","_d","callContract","x"],"sources":["/Users/marijoradman/y22/miami6/miami-hackathon-starknet-p2e/node_modules/starknet/dist/contract/default.js"],"sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Contract = void 0;\nvar bn_js_1 = __importDefault(require(\"bn.js\"));\nvar minimalistic_assert_1 = __importDefault(require(\"minimalistic-assert\"));\nvar provider_1 = require(\"../provider\");\nvar number_1 = require(\"../utils/number\");\nfunction parseFelt(candidate) {\n    try {\n        return (0, number_1.toBN)(candidate);\n    }\n    catch (e) {\n        throw Error('Couldnt parse felt');\n    }\n}\n/**\n * Adds call methods to the contract\n *\n */\nfunction buildCall(contract, functionAbi) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, contract.call(functionAbi.name, args)];\n            });\n        });\n    };\n}\n/**\n * Adds invoke methods to the contract\n *\n */\nfunction buildInvoke(contract, functionAbi) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return __awaiter(this, void 0, void 0, function () {\n            var inputs, inputsLength, options;\n            return __generator(this, function (_a) {\n                inputs = functionAbi.inputs;\n                inputsLength = inputs.reduce(function (acc, input) {\n                    if (!/_len$/.test(input.name)) {\n                        return acc + 1;\n                    }\n                    return acc;\n                }, 0);\n                options = {};\n                if (inputsLength + 1 === args.length && typeof args[args.length - 1] === 'object') {\n                    Object.assign(options, args.pop());\n                }\n                return [2 /*return*/, contract.invoke(functionAbi.name, args, options)];\n            });\n        });\n    };\n}\n/**\n * Adds call/invoke methods to the contract\n *\n */\nfunction buildDefault(contract, functionAbi) {\n    if (functionAbi.stateMutability === 'view') {\n        return buildCall(contract, functionAbi);\n    }\n    return buildInvoke(contract, functionAbi);\n}\n/**\n * Adds populate for methods to the contract\n *\n */\nfunction buildPopulate(contract, functionAbi) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return contract.populate(functionAbi.name, args);\n    };\n}\n/**\n * Adds estimateFee for methods to the contract\n *\n */\nfunction buildEstimate(contract, functionAbi) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return contract.estimate(functionAbi.name, args);\n    };\n}\nvar Contract = /** @class */ (function () {\n    /**\n     * Contract class to handle contract methods\n     *\n     * @param abi - Abi of the contract object\n     * @param address (optional) - address to connect to\n     * @param providerOrAccount (optional) - Provider or Account to attach to\n     */\n    function Contract(abi, address, providerOrAccount) {\n        var _this = this;\n        if (providerOrAccount === void 0) { providerOrAccount = provider_1.defaultProvider; }\n        this.address = address;\n        this.providerOrAccount = providerOrAccount;\n        this.abi = abi;\n        this.structs = abi\n            .filter(function (abiEntry) { return abiEntry.type === 'struct'; })\n            .reduce(function (acc, abiEntry) {\n            var _a;\n            return (__assign(__assign({}, acc), (_a = {}, _a[abiEntry.name] = abiEntry, _a)));\n        }, {});\n        Object.defineProperty(this, 'functions', {\n            enumerable: true,\n            value: {},\n            writable: false,\n        });\n        Object.defineProperty(this, 'callStatic', {\n            enumerable: true,\n            value: {},\n            writable: false,\n        });\n        Object.defineProperty(this, 'populateTransaction', {\n            enumerable: true,\n            value: {},\n            writable: false,\n        });\n        Object.defineProperty(this, 'estimateFee', {\n            enumerable: true,\n            value: {},\n            writable: false,\n        });\n        this.abi.forEach(function (abiElement) {\n            if (abiElement.type !== 'function') {\n                return;\n            }\n            var signature = abiElement.name;\n            if (!_this[signature]) {\n                Object.defineProperty(_this, signature, {\n                    enumerable: true,\n                    value: buildDefault(_this, abiElement),\n                    writable: false,\n                });\n            }\n            if (!_this.functions[signature]) {\n                Object.defineProperty(_this.functions, signature, {\n                    enumerable: true,\n                    value: buildDefault(_this, abiElement),\n                    writable: false,\n                });\n            }\n            if (!_this.callStatic[signature]) {\n                Object.defineProperty(_this.callStatic, signature, {\n                    enumerable: true,\n                    value: buildCall(_this, abiElement),\n                    writable: false,\n                });\n            }\n            if (!_this.populateTransaction[signature]) {\n                Object.defineProperty(_this.populateTransaction, signature, {\n                    enumerable: true,\n                    value: buildPopulate(_this, abiElement),\n                    writable: false,\n                });\n            }\n            if (!_this.estimateFee[signature]) {\n                Object.defineProperty(_this.estimateFee, signature, {\n                    enumerable: true,\n                    value: buildEstimate(_this, abiElement),\n                    writable: false,\n                });\n            }\n        });\n    }\n    /**\n     * Saves the address of the contract deployed on network that will be used for interaction\n     *\n     * @param address - address of the contract\n     */\n    Contract.prototype.attach = function (address) {\n        this.address = address;\n    };\n    /**\n     * Attaches to new Provider or Account\n     *\n     * @param providerOrAccount - new Provider or Account to attach to\n     */\n    Contract.prototype.connect = function (providerOrAccount) {\n        this.providerOrAccount = providerOrAccount;\n    };\n    /**\n     * Resolves when contract is deployed on the network or when no deployment transaction is found\n     *\n     * @returns Promise that resolves when contract is deployed on the network or when no deployment transaction is found\n     * @throws When deployment fails\n     */\n    Contract.prototype.deployed = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.deployTransactionHash) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.providerOrAccount.waitForTransaction(this.deployTransactionHash)];\n                    case 1:\n                        _a.sent();\n                        this.deployTransactionHash = undefined;\n                        _a.label = 2;\n                    case 2: return [2 /*return*/, this];\n                }\n            });\n        });\n    };\n    /**\n     * Validates if all arguments that are passed to the method are corresponding to the ones in the abi\n     *\n     * @param type - type of the method\n     * @param method  - name of the method\n     * @param args - arguments that are passed to the method\n     */\n    Contract.prototype.validateMethodAndArgs = function (type, method, args) {\n        var _this = this;\n        if (args === void 0) { args = []; }\n        // ensure provided method exists\n        var invokeableFunctionNames = this.abi\n            .filter(function (abi) {\n            if (abi.type !== 'function')\n                return false;\n            var isView = abi.stateMutability === 'view';\n            return type === 'INVOKE' ? !isView : isView;\n        })\n            .map(function (abi) { return abi.name; });\n        (0, minimalistic_assert_1.default)(invokeableFunctionNames.includes(method), (type === 'INVOKE' ? 'invokeable' : 'viewable') + \" method not found in abi\");\n        // ensure args match abi type\n        var methodAbi = this.abi.find(function (abi) { return abi.name === method && abi.type === 'function'; });\n        var argPosition = 0;\n        methodAbi.inputs.forEach(function (input) {\n            if (/_len$/.test(input.name)) {\n                return;\n            }\n            if (input.type === 'felt') {\n                (0, minimalistic_assert_1.default)(typeof args[argPosition] === 'string' ||\n                    typeof args[argPosition] === 'number' ||\n                    args[argPosition] instanceof bn_js_1.default, \"arg \" + input.name + \" should be a felt (string, number, BigNumber)\");\n                argPosition += 1;\n            }\n            else if (input.type in _this.structs && typeof args[argPosition] === 'object') {\n                if (Array.isArray(args[argPosition])) {\n                    var structMembersLength = _this.calculateStructMembers(input.type);\n                    (0, minimalistic_assert_1.default)(args[argPosition].length === structMembersLength, \"arg should be of length \" + structMembersLength);\n                }\n                else {\n                    _this.structs[input.type].members.forEach(function (_a) {\n                        var name = _a.name;\n                        (0, minimalistic_assert_1.default)(Object.keys(args[argPosition]).includes(name), \"arg should have a property \" + name);\n                    });\n                }\n                argPosition += 1;\n            }\n            else {\n                (0, minimalistic_assert_1.default)(Array.isArray(args[argPosition]), \"arg \" + input.name + \" should be an Array\");\n                if (input.type === 'felt*') {\n                    args[argPosition].forEach(function (felt) {\n                        (0, minimalistic_assert_1.default)(typeof felt === 'string' || typeof felt === 'number' || felt instanceof bn_js_1.default, \"arg \" + input.name + \" should be an array of string, number or BigNumber\");\n                    });\n                    argPosition += 1;\n                }\n                else if (/\\(felt/.test(input.type)) {\n                    var tupleLength = input.type.split(',').length;\n                    (0, minimalistic_assert_1.default)(args[argPosition].length === tupleLength, \"arg \" + input.name + \" should have \" + tupleLength + \" elements in tuple\");\n                    args[argPosition].forEach(function (felt) {\n                        (0, minimalistic_assert_1.default)(typeof felt === 'string' || typeof felt === 'number' || felt instanceof bn_js_1.default, \"arg \" + input.name + \" should be an array of string, number or BigNumber\");\n                    });\n                    argPosition += 1;\n                }\n                else {\n                    var arrayType_1 = input.type.replace('*', '');\n                    args[argPosition].forEach(function (struct) {\n                        _this.structs[arrayType_1].members.forEach(function (_a) {\n                            var name = _a.name;\n                            if (Array.isArray(struct)) {\n                                var structMembersLength = _this.calculateStructMembers(arrayType_1);\n                                (0, minimalistic_assert_1.default)(struct.length === structMembersLength, \"arg should be of length \" + structMembersLength);\n                            }\n                            else {\n                                (0, minimalistic_assert_1.default)(Object.keys(struct).includes(name), \"arg \" + input.name + \" should be an array of \" + arrayType_1);\n                            }\n                        });\n                    });\n                    argPosition += 1;\n                }\n            }\n        });\n    };\n    /**\n     * Deep parse of the object that has been passed to the method\n     *\n     * @param struct - struct that needs to be calculated\n     * @return {number} - number of members for the given struct\n     */\n    Contract.prototype.calculateStructMembers = function (struct) {\n        var _this = this;\n        return this.structs[struct].members.reduce(function (acc, member) {\n            if (member.type === 'felt') {\n                return acc + 1;\n            }\n            return acc + _this.structMemberNum(member.type);\n        }, 0);\n    };\n    /**\n     * Deep parse of the object that has been passed to the method\n     *\n     * @param element - element that needs to be parsed\n     * @param type  - name of the method\n     * @return {string | string[]} - parsed arguments in format that contract is expecting\n     */\n    Contract.prototype.parseCalldataValue = function (element, type) {\n        var _this = this;\n        if (element === undefined) {\n            throw Error('Missing element in calldata');\n        }\n        if (Array.isArray(element)) {\n            var structMemberNum = this.calculateStructMembers(type);\n            if (element.length !== structMemberNum) {\n                throw Error('Missing element in calldata');\n            }\n            return element.map(function (el) { return (0, number_1.toFelt)(el); });\n        }\n        // checking if the passed element is struct or element in struct\n        if (this.structs[type] && this.structs[type].members.length) {\n            // going through all the members of the struct and parsing the value\n            return this.structs[type].members.reduce(function (acc, member) {\n                // if the member of the struct is another struct this will return array of the felts if not it will be single felt\n                // TODO: refactor types so member name can be used as keyof ParsedStruct\n                /* @ts-ignore */\n                var parsedData = _this.parseCalldataValue(element[member.name], member.type);\n                if (typeof parsedData === 'string') {\n                    acc.push(parsedData);\n                }\n                else {\n                    acc.push.apply(acc, __spreadArray([], __read(parsedData), false));\n                }\n                return acc;\n            }, []);\n        }\n        return (0, number_1.toFelt)(element);\n    };\n    /**\n     * Parse of the response elements that are converted to Object (Struct) by using the abi\n     *\n     * @param responseIterator - iterator of the response\n     * @param type - type of the struct\n     * @return {BigNumberish | ParsedStruct} - parsed arguments in format that contract is expecting\n     */\n    Contract.prototype.parseResponseStruct = function (responseIterator, type) {\n        var _this = this;\n        // check the type of current element\n        if (type in this.structs && this.structs[type]) {\n            return this.structs[type].members.reduce(function (acc, el) {\n                // parse each member of the struct (member can felt or nested struct)\n                acc[el.name] = _this.parseResponseStruct(responseIterator, el.type);\n                return acc;\n            }, {});\n        }\n        return parseFelt(responseIterator.next().value);\n    };\n    /**\n     * Parse one field of the calldata by using input field from the abi for that method\n     *\n     * @param args - value of the field\n     * @param input  - input(field) information from the abi that will be used to parse the data\n     * @return {string | string[]} - parsed arguments in format that contract is expecting\n     */\n    Contract.prototype.parseCalldataField = function (argsIterator, input) {\n        var _this = this;\n        var name = input.name, type = input.type;\n        var value = argsIterator.next().value;\n        var parsedCalldata = [];\n        switch (true) {\n            case /\\*/.test(type):\n                if (Array.isArray(value)) {\n                    parsedCalldata.push((0, number_1.toFelt)(value.length));\n                    return value.reduce(function (acc, el) {\n                        if (/felt/.test(type)) {\n                            acc.push((0, number_1.toFelt)(el));\n                        }\n                        else {\n                            acc.push.apply(acc, __spreadArray([], __read(_this.parseCalldataValue(el, type.replace('*', ''))), false));\n                        }\n                        return acc;\n                    }, parsedCalldata);\n                }\n                throw Error(\"Expected \" + name + \" to be array\");\n            case type in this.structs:\n                return this.parseCalldataValue(value, type);\n            case /\\(felt/.test(type):\n                if (Array.isArray(value)) {\n                    return value.map(function (el) { return (0, number_1.toFelt)(el); });\n                }\n                throw Error(\"Expected \" + name + \" to be array\");\n            default:\n                return (0, number_1.toFelt)(value);\n        }\n    };\n    /**\n     * Parse the calldata by using input fields from the abi for that method\n     *\n     * @param args - arguments passed the the method\n     * @param inputs  - list of inputs(fields) that are in the abi\n     * @return {Calldata} - parsed arguments in format that contract is expecting\n     */\n    Contract.prototype.compileCalldata = function (args, inputs) {\n        var _this = this;\n        var argsIterator = args[Symbol.iterator]();\n        return inputs.reduce(function (acc, input) {\n            if (/_len$/.test(input.name)) {\n                return acc;\n            }\n            var parsedData = _this.parseCalldataField(argsIterator, input);\n            if (Array.isArray(parsedData)) {\n                acc.push.apply(acc, __spreadArray([], __read(parsedData), false));\n            }\n            else {\n                acc.push(parsedData);\n            }\n            return acc;\n        }, []);\n    };\n    /**\n     * Parse elements of the response and structuring them into one field by using output property from the abi for that method\n     *\n     * @param responseIterator - iterator of the response\n     * @param output  - output(field) information from the abi that will be used to parse the data\n     * @return - parsed response corresponding to the abi structure of the field\n     */\n    Contract.prototype.parseResponseField = function (responseIterator, output, parsedResult) {\n        var name = output.name, type = output.type;\n        var parsedDataArr = [];\n        switch (true) {\n            case /_len$/.test(name):\n                return parseFelt(responseIterator.next().value).toNumber();\n            case /\\(felt/.test(type):\n                return type.split(',').reduce(function (acc) {\n                    acc.push(parseFelt(responseIterator.next().value));\n                    return acc;\n                }, []);\n            case /\\*/.test(type):\n                if (parsedResult && parsedResult[name + \"_len\"]) {\n                    var arrLen = parsedResult[name + \"_len\"];\n                    while (parsedDataArr.length < arrLen) {\n                        parsedDataArr.push(this.parseResponseStruct(responseIterator, output.type.replace('*', '')));\n                    }\n                }\n                return parsedDataArr;\n            case type in this.structs:\n                return this.parseResponseStruct(responseIterator, type);\n            default:\n                return parseFelt(responseIterator.next().value);\n        }\n    };\n    /**\n     * Parse elements of the response array and structuring them into response object\n     *\n     * @param method - method name\n     * @param response  - response from the method\n     * @return - parsed response corresponding to the abi\n     */\n    Contract.prototype.parseResponse = function (method, response) {\n        var _this = this;\n        var outputs = this.abi.find(function (abi) { return abi.name === method; }).outputs;\n        var responseIterator = response.flat()[Symbol.iterator]();\n        var resultObject = outputs.flat().reduce(function (acc, output) {\n            acc[output.name] = _this.parseResponseField(responseIterator, output, acc);\n            if (acc[output.name] && acc[output.name + \"_len\"]) {\n                delete acc[output.name + \"_len\"];\n            }\n            return acc;\n        }, {});\n        return Object.entries(resultObject).reduce(function (acc, _a) {\n            var _b = __read(_a, 2), key = _b[0], value = _b[1];\n            acc.push(value);\n            acc[key] = value;\n            return acc;\n        }, []);\n    };\n    Contract.prototype.invoke = function (method, args, options) {\n        if (args === void 0) { args = []; }\n        if (options === void 0) { options = {}; }\n        // ensure contract is connected\n        (0, minimalistic_assert_1.default)(this.address !== null, 'contract isnt connected to an address');\n        // validate method and args\n        this.validateMethodAndArgs('INVOKE', method, args);\n        var inputs = this.abi.find(function (abi) { return abi.name === method; }).inputs;\n        var inputsLength = inputs.reduce(function (acc, input) {\n            if (!/_len$/.test(input.name)) {\n                return acc + 1;\n            }\n            return acc;\n        }, 0);\n        if (args.length !== inputsLength) {\n            throw Error(\"Invalid number of arguments, expected \" + inputsLength + \" arguments, but got \" + args.length);\n        }\n        // compile calldata\n        var calldata = this.compileCalldata(args, inputs);\n        var invocation = {\n            contractAddress: this.address,\n            calldata: calldata,\n            entrypoint: method,\n        };\n        if ('execute' in this.providerOrAccount) {\n            return this.providerOrAccount.execute(invocation, undefined, {\n                maxFee: options.maxFee,\n                nonce: options.nonce,\n            });\n        }\n        return this.providerOrAccount.invokeFunction(__assign(__assign({}, invocation), { signature: options.signature || [] }));\n    };\n    Contract.prototype.call = function (method, args, _a) {\n        if (args === void 0) { args = []; }\n        var _b = _a === void 0 ? {} : _a, _c = _b.blockIdentifier, blockIdentifier = _c === void 0 ? 'pending' : _c;\n        return __awaiter(this, void 0, void 0, function () {\n            var inputs, calldata;\n            var _this = this;\n            return __generator(this, function (_d) {\n                // ensure contract is connected\n                (0, minimalistic_assert_1.default)(this.address !== null, 'contract isnt connected to an address');\n                // validate method and args\n                this.validateMethodAndArgs('CALL', method, args);\n                inputs = this.abi.find(function (abi) { return abi.name === method; }).inputs;\n                calldata = this.compileCalldata(args, inputs);\n                return [2 /*return*/, this.providerOrAccount\n                        .callContract({\n                        contractAddress: this.address,\n                        calldata: calldata,\n                        entrypoint: method,\n                    }, { blockIdentifier: blockIdentifier })\n                        .then(function (x) { return _this.parseResponse(method, x.result); })];\n            });\n        });\n    };\n    Contract.prototype.estimate = function (method, args) {\n        if (args === void 0) { args = []; }\n        return __awaiter(this, void 0, void 0, function () {\n            var invocation;\n            var _a;\n            return __generator(this, function (_b) {\n                //  TODO; remove error as soon as estimate fees are supported\n                // ensure contract is connected\n                (0, minimalistic_assert_1.default)(this.address !== null, 'contract isnt connected to an address');\n                // validate method and args\n                this.validateMethodAndArgs('INVOKE', method, args);\n                invocation = (_a = this.populateTransaction)[method].apply(_a, __spreadArray([], __read(args), false));\n                if ('estimateFee' in this.providerOrAccount) {\n                    return [2 /*return*/, this.providerOrAccount.estimateFee(invocation)];\n                }\n                throw Error('Contract must be connected to the account contract to estimate');\n            });\n        });\n    };\n    Contract.prototype.populate = function (method, args) {\n        if (args === void 0) { args = []; }\n        var inputs = this.abi.find(function (abi) { return abi.name === method; }).inputs;\n        return {\n            contractAddress: this.address,\n            entrypoint: method,\n            calldata: this.compileCalldata(args, inputs),\n            signature: [],\n        };\n    };\n    return Contract;\n}());\nexports.Contract = Contract;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}