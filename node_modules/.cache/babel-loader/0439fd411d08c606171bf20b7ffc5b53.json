{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __exportStar = this && this.__exportStar || function (m, exports) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getMessageHash = exports.getStructHash = exports.encodeData = exports.getTypeHash = exports.encodeType = exports.getDependencies = void 0;\n\nvar hash_1 = require(\"../hash\");\n\nvar number_1 = require(\"../number\");\n\nvar shortString_1 = require(\"../shortString\");\n\nvar utils_1 = require(\"./utils\");\n\n__exportStar(require(\"./types\"), exports);\n\nfunction getHex(value) {\n  try {\n    return (0, number_1.toHex)((0, number_1.toBN)(value));\n  } catch (e) {\n    if (typeof value === 'string') {\n      return (0, number_1.toHex)((0, number_1.toBN)((0, shortString_1.encodeShortString)(value)));\n    }\n\n    throw new Error(\"Invalid BigNumberish: \" + value);\n  }\n}\n/**\n * Get the dependencies of a struct type. If a struct has the same dependency multiple times, it's only included once\n * in the resulting array.\n *\n * @param {TypedData} typedData\n * @param {string} type\n * @param {string[]} [dependencies]\n * @return {string[]}\n */\n\n\nvar getDependencies = function (typedData, type, dependencies) {\n  if (dependencies === void 0) {\n    dependencies = [];\n  } // `getDependencies` is called by most other functions, so we validate the JSON schema here\n\n\n  if (!(0, utils_1.validateTypedData)(typedData)) {\n    throw new Error('Typed data does not match JSON schema');\n  }\n\n  if (dependencies.includes(type)) {\n    return dependencies;\n  }\n\n  if (!typedData.types[type]) {\n    return dependencies;\n  }\n\n  return __spreadArray([type], __read(typedData.types[type].reduce(function (previous, t) {\n    return __spreadArray(__spreadArray([], __read(previous), false), __read((0, exports.getDependencies)(typedData, t.type, previous).filter(function (dependency) {\n      return !previous.includes(dependency);\n    })), false);\n  }, [])), false);\n};\n\nexports.getDependencies = getDependencies;\n/**\n * Encode a type to a string. All dependant types are alphabetically sorted.\n *\n * @param {TypedData} typedData\n * @param {string} type\n * @return {string}\n */\n\nvar encodeType = function (typedData, type) {\n  var _a = __read((0, exports.getDependencies)(typedData, type)),\n      primary = _a[0],\n      dependencies = _a.slice(1);\n\n  var types = __spreadArray([primary], __read(dependencies.sort()), false);\n\n  return types.map(function (dependency) {\n    return dependency + \"(\" + typedData.types[dependency].map(function (t) {\n      return t.name + \":\" + t.type;\n    }) + \")\";\n  }).join('');\n};\n\nexports.encodeType = encodeType;\n/**\n * Get a type string as hash.\n *\n * @param {TypedData} typedData\n * @param {string} type\n * @return {string}\n */\n\nvar getTypeHash = function (typedData, type) {\n  return (0, hash_1.getSelectorFromName)((0, exports.encodeType)(typedData, type));\n};\n\nexports.getTypeHash = getTypeHash;\n/**\n * Encodes a single value to an ABI serialisable string, number or Buffer. Returns the data as tuple, which consists of\n * an array of ABI compatible types, and an array of corresponding values.\n *\n * @param {TypedData} typedData\n * @param {string} type\n * @param {any} data\n * @returns {[string, string]}\n */\n\nvar encodeValue = function (typedData, type, data) {\n  if (typedData.types[type]) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return [type, (0, exports.getStructHash)(typedData, type, data)];\n  }\n\n  if (type === 'felt*') {\n    return ['felt*', (0, hash_1.computeHashOnElements)(data)];\n  }\n\n  return [type, getHex(data)];\n};\n/**\n * Encode the data to an ABI encoded Buffer. The data should be a key -> value object with all the required values. All\n * dependant types are automatically encoded.\n *\n * @param {TypedData} typedData\n * @param {string} type\n * @param {Record<string, any>} data\n */\n\n\nvar encodeData = function (typedData, type, data) {\n  var _a = __read(typedData.types[type].reduce(function (_a, field) {\n    var _b = __read(_a, 2),\n        ts = _b[0],\n        vs = _b[1];\n\n    if (data[field.name] === undefined || data[field.name] === null) {\n      throw new Error(\"Cannot encode data: missing data for '\" + field.name + \"'\");\n    }\n\n    var value = data[field.name];\n\n    var _c = __read(encodeValue(typedData, field.type, value), 2),\n        t = _c[0],\n        encodedValue = _c[1];\n\n    return [__spreadArray(__spreadArray([], __read(ts), false), [t], false), __spreadArray(__spreadArray([], __read(vs), false), [encodedValue], false)];\n  }, [['felt'], [(0, exports.getTypeHash)(typedData, type)]]), 2),\n      types = _a[0],\n      values = _a[1];\n\n  return [types, values];\n};\n\nexports.encodeData = encodeData;\n/**\n * Get encoded data as a hash. The data should be a key -> value object with all the required values. All dependant\n * types are automatically encoded.\n *\n * @param {TypedData} typedData\n * @param {string} type\n * @param {Record<string, any>} data\n * @return {Buffer}\n */\n\nvar getStructHash = function (typedData, type, data) {\n  return (0, hash_1.computeHashOnElements)((0, exports.encodeData)(typedData, type, data)[1]);\n};\n\nexports.getStructHash = getStructHash;\n/**\n * Get the EIP-191 encoded message to sign, from the typedData object. If `hash` is enabled, the message will be hashed\n * with Keccak256.\n *\n * @param {TypedData} typedData\n * @param {BigNumberish} account\n * @return {string}\n */\n\nvar getMessageHash = function (typedData, account) {\n  var message = [(0, shortString_1.encodeShortString)('StarkNet Message'), (0, exports.getStructHash)(typedData, 'StarkNetDomain', typedData.domain), account, (0, exports.getStructHash)(typedData, typedData.primaryType, typedData.message)];\n  return (0, hash_1.computeHashOnElements)(message);\n};\n\nexports.getMessageHash = getMessageHash;","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","defineProperty","enumerable","get","__exportStar","exports","p","prototype","hasOwnProperty","call","__read","n","Symbol","iterator","i","r","ar","e","next","done","push","value","error","__spreadArray","to","from","pack","arguments","length","l","Array","slice","concat","getMessageHash","getStructHash","encodeData","getTypeHash","encodeType","getDependencies","hash_1","require","number_1","shortString_1","utils_1","getHex","toHex","toBN","encodeShortString","Error","typedData","type","dependencies","validateTypedData","includes","types","reduce","previous","t","filter","dependency","_a","primary","sort","map","name","join","getSelectorFromName","encodeValue","data","computeHashOnElements","field","_b","ts","vs","_c","encodedValue","values","account","message","domain","primaryType"],"sources":["/Users/marijoradman/y22/miami6/miami-hackathon-starknet-p2e/node_modules/starknet/dist/utils/typedData/index.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getMessageHash = exports.getStructHash = exports.encodeData = exports.getTypeHash = exports.encodeType = exports.getDependencies = void 0;\nvar hash_1 = require(\"../hash\");\nvar number_1 = require(\"../number\");\nvar shortString_1 = require(\"../shortString\");\nvar utils_1 = require(\"./utils\");\n__exportStar(require(\"./types\"), exports);\nfunction getHex(value) {\n    try {\n        return (0, number_1.toHex)((0, number_1.toBN)(value));\n    }\n    catch (e) {\n        if (typeof value === 'string') {\n            return (0, number_1.toHex)((0, number_1.toBN)((0, shortString_1.encodeShortString)(value)));\n        }\n        throw new Error(\"Invalid BigNumberish: \" + value);\n    }\n}\n/**\n * Get the dependencies of a struct type. If a struct has the same dependency multiple times, it's only included once\n * in the resulting array.\n *\n * @param {TypedData} typedData\n * @param {string} type\n * @param {string[]} [dependencies]\n * @return {string[]}\n */\nvar getDependencies = function (typedData, type, dependencies) {\n    if (dependencies === void 0) { dependencies = []; }\n    // `getDependencies` is called by most other functions, so we validate the JSON schema here\n    if (!(0, utils_1.validateTypedData)(typedData)) {\n        throw new Error('Typed data does not match JSON schema');\n    }\n    if (dependencies.includes(type)) {\n        return dependencies;\n    }\n    if (!typedData.types[type]) {\n        return dependencies;\n    }\n    return __spreadArray([\n        type\n    ], __read(typedData.types[type].reduce(function (previous, t) { return __spreadArray(__spreadArray([], __read(previous), false), __read((0, exports.getDependencies)(typedData, t.type, previous).filter(function (dependency) { return !previous.includes(dependency); })), false); }, [])), false);\n};\nexports.getDependencies = getDependencies;\n/**\n * Encode a type to a string. All dependant types are alphabetically sorted.\n *\n * @param {TypedData} typedData\n * @param {string} type\n * @return {string}\n */\nvar encodeType = function (typedData, type) {\n    var _a = __read((0, exports.getDependencies)(typedData, type)), primary = _a[0], dependencies = _a.slice(1);\n    var types = __spreadArray([primary], __read(dependencies.sort()), false);\n    return types\n        .map(function (dependency) {\n        return dependency + \"(\" + typedData.types[dependency].map(function (t) { return t.name + \":\" + t.type; }) + \")\";\n    })\n        .join('');\n};\nexports.encodeType = encodeType;\n/**\n * Get a type string as hash.\n *\n * @param {TypedData} typedData\n * @param {string} type\n * @return {string}\n */\nvar getTypeHash = function (typedData, type) {\n    return (0, hash_1.getSelectorFromName)((0, exports.encodeType)(typedData, type));\n};\nexports.getTypeHash = getTypeHash;\n/**\n * Encodes a single value to an ABI serialisable string, number or Buffer. Returns the data as tuple, which consists of\n * an array of ABI compatible types, and an array of corresponding values.\n *\n * @param {TypedData} typedData\n * @param {string} type\n * @param {any} data\n * @returns {[string, string]}\n */\nvar encodeValue = function (typedData, type, data) {\n    if (typedData.types[type]) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return [type, (0, exports.getStructHash)(typedData, type, data)];\n    }\n    if (type === 'felt*') {\n        return ['felt*', (0, hash_1.computeHashOnElements)(data)];\n    }\n    return [type, getHex(data)];\n};\n/**\n * Encode the data to an ABI encoded Buffer. The data should be a key -> value object with all the required values. All\n * dependant types are automatically encoded.\n *\n * @param {TypedData} typedData\n * @param {string} type\n * @param {Record<string, any>} data\n */\nvar encodeData = function (typedData, type, data) {\n    var _a = __read(typedData.types[type].reduce(function (_a, field) {\n        var _b = __read(_a, 2), ts = _b[0], vs = _b[1];\n        if (data[field.name] === undefined || data[field.name] === null) {\n            throw new Error(\"Cannot encode data: missing data for '\" + field.name + \"'\");\n        }\n        var value = data[field.name];\n        var _c = __read(encodeValue(typedData, field.type, value), 2), t = _c[0], encodedValue = _c[1];\n        return [\n            __spreadArray(__spreadArray([], __read(ts), false), [t], false),\n            __spreadArray(__spreadArray([], __read(vs), false), [encodedValue], false),\n        ];\n    }, [['felt'], [(0, exports.getTypeHash)(typedData, type)]]), 2), types = _a[0], values = _a[1];\n    return [types, values];\n};\nexports.encodeData = encodeData;\n/**\n * Get encoded data as a hash. The data should be a key -> value object with all the required values. All dependant\n * types are automatically encoded.\n *\n * @param {TypedData} typedData\n * @param {string} type\n * @param {Record<string, any>} data\n * @return {Buffer}\n */\nvar getStructHash = function (typedData, type, data) {\n    return (0, hash_1.computeHashOnElements)((0, exports.encodeData)(typedData, type, data)[1]);\n};\nexports.getStructHash = getStructHash;\n/**\n * Get the EIP-191 encoded message to sign, from the typedData object. If `hash` is enabled, the message will be hashed\n * with Keccak256.\n *\n * @param {TypedData} typedData\n * @param {BigNumberish} account\n * @return {string}\n */\nvar getMessageHash = function (typedData, account) {\n    var message = [\n        (0, shortString_1.encodeShortString)('StarkNet Message'),\n        (0, exports.getStructHash)(typedData, 'StarkNetDomain', typedData.domain),\n        account,\n        (0, exports.getStructHash)(typedData, typedData.primaryType, typedData.message),\n    ];\n    return (0, hash_1.computeHashOnElements)(message);\n};\nexports.getMessageHash = getMessageHash;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}