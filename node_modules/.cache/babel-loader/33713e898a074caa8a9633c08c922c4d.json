{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateAndParseAddress = exports.addAddressPadding = void 0;\n\nvar constants_1 = require(\"../constants\");\n\nvar encode_1 = require(\"./encode\");\n\nvar number_1 = require(\"./number\");\n\nfunction addAddressPadding(address) {\n  return (0, encode_1.addHexPrefix)((0, encode_1.removeHexPrefix)(address).padStart(64, '0'));\n}\n\nexports.addAddressPadding = addAddressPadding;\n\nfunction validateAndParseAddress(address) {\n  if (typeof address !== 'string') {\n    throw new Error('Invalid Address Type');\n  }\n\n  (0, number_1.assertInRange)(address, constants_1.ZERO, constants_1.MASK_251, 'Starknet Address');\n  var result = addAddressPadding(address);\n\n  if (!result.match(/^(0x)?[0-9a-fA-F]{64}$/)) {\n    throw new Error('Invalid Address Format');\n  }\n\n  return result;\n}\n\nexports.validateAndParseAddress = validateAndParseAddress;","map":{"version":3,"names":["Object","defineProperty","exports","value","validateAndParseAddress","addAddressPadding","constants_1","require","encode_1","number_1","address","addHexPrefix","removeHexPrefix","padStart","Error","assertInRange","ZERO","MASK_251","result","match"],"sources":["/Users/marijoradman/y22/miami6/miami-hackathon-starknet-p2e/node_modules/starknet/dist/utils/address.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateAndParseAddress = exports.addAddressPadding = void 0;\nvar constants_1 = require(\"../constants\");\nvar encode_1 = require(\"./encode\");\nvar number_1 = require(\"./number\");\nfunction addAddressPadding(address) {\n    return (0, encode_1.addHexPrefix)((0, encode_1.removeHexPrefix)(address).padStart(64, '0'));\n}\nexports.addAddressPadding = addAddressPadding;\nfunction validateAndParseAddress(address) {\n    if (typeof address !== 'string') {\n        throw new Error('Invalid Address Type');\n    }\n    (0, number_1.assertInRange)(address, constants_1.ZERO, constants_1.MASK_251, 'Starknet Address');\n    var result = addAddressPadding(address);\n    if (!result.match(/^(0x)?[0-9a-fA-F]{64}$/)) {\n        throw new Error('Invalid Address Format');\n    }\n    return result;\n}\nexports.validateAndParseAddress = validateAndParseAddress;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,uBAAR,GAAkCF,OAAO,CAACG,iBAAR,GAA4B,KAAK,CAAnE;;AACA,IAAIC,WAAW,GAAGC,OAAO,CAAC,cAAD,CAAzB;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,UAAD,CAAtB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,UAAD,CAAtB;;AACA,SAASF,iBAAT,CAA2BK,OAA3B,EAAoC;EAChC,OAAO,CAAC,GAAGF,QAAQ,CAACG,YAAb,EAA2B,CAAC,GAAGH,QAAQ,CAACI,eAAb,EAA8BF,OAA9B,EAAuCG,QAAvC,CAAgD,EAAhD,EAAoD,GAApD,CAA3B,CAAP;AACH;;AACDX,OAAO,CAACG,iBAAR,GAA4BA,iBAA5B;;AACA,SAASD,uBAAT,CAAiCM,OAAjC,EAA0C;EACtC,IAAI,OAAOA,OAAP,KAAmB,QAAvB,EAAiC;IAC7B,MAAM,IAAII,KAAJ,CAAU,sBAAV,CAAN;EACH;;EACD,CAAC,GAAGL,QAAQ,CAACM,aAAb,EAA4BL,OAA5B,EAAqCJ,WAAW,CAACU,IAAjD,EAAuDV,WAAW,CAACW,QAAnE,EAA6E,kBAA7E;EACA,IAAIC,MAAM,GAAGb,iBAAiB,CAACK,OAAD,CAA9B;;EACA,IAAI,CAACQ,MAAM,CAACC,KAAP,CAAa,wBAAb,CAAL,EAA6C;IACzC,MAAM,IAAIL,KAAJ,CAAU,wBAAV,CAAN;EACH;;EACD,OAAOI,MAAP;AACH;;AACDhB,OAAO,CAACE,uBAAR,GAAkCA,uBAAlC"},"metadata":{},"sourceType":"script"}