{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shake256 = exports.shake128 = exports.keccak_512 = exports.keccak_384 = exports.keccak_256 = exports.keccak_224 = exports.sha3_512 = exports.sha3_384 = exports.sha3_256 = exports.sha3_224 = exports.Keccak = exports.keccakP = void 0;\n\nconst u64 = __importStar(require(\"./_u64.js\"));\n\nconst utils_js_1 = require(\"./utils.js\"); // Various per round constants calculations\n\n\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [[], [], []];\n\nconst _0n = BigInt(0);\n\nconst _1n = BigInt(1);\n\nconst _2n = BigInt(2);\n\nconst _7n = BigInt(7);\n\nconst _256n = BigInt(256);\n\nconst _0x71n = BigInt(0x71);\n\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n  // Pi\n  [x, y] = [y, (2 * x + 3 * y) % 5];\n  SHA3_PI.push(2 * (5 * y + x)); // Rotational\n\n  SHA3_ROTL.push((round + 1) * (round + 2) / 2 % 64); // Iota\n\n  let t = _0n;\n\n  for (let j = 0; j < 7; j++) {\n    R = (R << _1n ^ (R >> _7n) * _0x71n) % _256n;\n    if (R & _2n) t ^= _1n << (_1n << BigInt(j)) - _1n;\n  }\n\n  _SHA3_IOTA.push(t);\n}\n\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = u64.split(_SHA3_IOTA, true); // Left rotation (without 0, 32, 64)\n\nconst rotlH = (h, l, s) => s > 32 ? u64.rotlBH(h, l, s) : u64.rotlSH(h, l, s);\n\nconst rotlL = (h, l, s) => s > 32 ? u64.rotlBL(h, l, s) : u64.rotlSL(h, l, s); // Same as keccakf1600, but allows to skip some rounds\n\n\nfunction keccakP(s) {\n  let rounds = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 24;\n  const B = new Uint32Array(5 * 2); // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n\n  for (let round = 24 - rounds; round < 24; round++) {\n    // Theta θ\n    for (let x = 0; x < 10; x++) B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n\n    for (let x = 0; x < 10; x += 2) {\n      const idx1 = (x + 8) % 10;\n      const idx0 = (x + 2) % 10;\n      const B0 = B[idx0];\n      const B1 = B[idx0 + 1];\n      const Th = rotlH(B0, B1, 1) ^ B[idx1];\n      const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n\n      for (let y = 0; y < 50; y += 10) {\n        s[x + y] ^= Th;\n        s[x + y + 1] ^= Tl;\n      }\n    } // Rho (ρ) and Pi (π)\n\n\n    let curH = s[2];\n    let curL = s[3];\n\n    for (let t = 0; t < 24; t++) {\n      const shift = SHA3_ROTL[t];\n      const Th = rotlH(curH, curL, shift);\n      const Tl = rotlL(curH, curL, shift);\n      const PI = SHA3_PI[t];\n      curH = s[PI];\n      curL = s[PI + 1];\n      s[PI] = Th;\n      s[PI + 1] = Tl;\n    } // Chi (χ)\n\n\n    for (let y = 0; y < 50; y += 10) {\n      for (let x = 0; x < 10; x++) B[x] = s[y + x];\n\n      for (let x = 0; x < 10; x++) s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n    } // Iota (ι)\n\n\n    s[0] ^= SHA3_IOTA_H[round];\n    s[1] ^= SHA3_IOTA_L[round];\n  }\n\n  B.fill(0);\n}\n\nexports.keccakP = keccakP;\n\nclass Keccak extends utils_js_1.Hash {\n  // NOTE: we accept arguments in bytes instead of bits here.\n  constructor(blockLen, suffix, outputLen) {\n    let enableXOF = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    let rounds = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 24;\n    super();\n    this.blockLen = blockLen;\n    this.suffix = suffix;\n    this.outputLen = outputLen;\n    this.enableXOF = enableXOF;\n    this.rounds = rounds;\n    this.pos = 0;\n    this.posOut = 0;\n    this.finished = false;\n    this.destroyed = false; // Can be passed from user as dkLen\n\n    (0, utils_js_1.assertNumber)(outputLen); // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n\n    if (0 >= this.blockLen || this.blockLen >= 200) throw new Error('Sha3 supports only keccak-f1600 function');\n    this.state = new Uint8Array(200);\n    this.state32 = (0, utils_js_1.u32)(this.state);\n  }\n\n  keccak() {\n    keccakP(this.state32, this.rounds);\n    this.posOut = 0;\n    this.pos = 0;\n  }\n\n  update(data) {\n    if (this.destroyed) throw new Error('instance is destroyed');\n    if (this.finished) throw new Error('digest() was already called');\n    const {\n      blockLen,\n      state\n    } = this;\n    data = (0, utils_js_1.toBytes)(data);\n    const len = data.length;\n\n    for (let pos = 0; pos < len;) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n\n      for (let i = 0; i < take; i++) state[this.pos++] ^= data[pos++];\n\n      if (this.pos === blockLen) this.keccak();\n    }\n\n    return this;\n  }\n\n  finish() {\n    if (this.finished) return;\n    this.finished = true;\n    const {\n      state,\n      suffix,\n      pos,\n      blockLen\n    } = this; // Do the padding\n\n    state[pos] ^= suffix;\n    if ((suffix & 0x80) !== 0 && pos === blockLen - 1) this.keccak();\n    state[blockLen - 1] ^= 0x80;\n    this.keccak();\n  }\n\n  writeInto(out) {\n    if (this.destroyed) throw new Error('instance is destroyed');\n    if (!(out instanceof Uint8Array)) throw new Error('Keccak: invalid output buffer');\n    this.finish();\n\n    for (let pos = 0, len = out.length; pos < len;) {\n      if (this.posOut >= this.blockLen) this.keccak();\n      const take = Math.min(this.blockLen - this.posOut, len - pos);\n      out.set(this.state.subarray(this.posOut, this.posOut + take), pos);\n      this.posOut += take;\n      pos += take;\n    }\n\n    return out;\n  }\n\n  xofInto(out) {\n    // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n    if (!this.enableXOF) throw new Error('XOF is not possible for this instance');\n    return this.writeInto(out);\n  }\n\n  xof(bytes) {\n    (0, utils_js_1.assertNumber)(bytes);\n    return this.xofInto(new Uint8Array(bytes));\n  }\n\n  digestInto(out) {\n    if (out.length < this.outputLen) throw new Error('Keccak: invalid output buffer');\n    if (this.finished) throw new Error('digest() was already called');\n    this.finish();\n    this.writeInto(out);\n    this.destroy();\n    return out;\n  }\n\n  digest() {\n    return this.digestInto(new Uint8Array(this.outputLen));\n  }\n\n  destroy() {\n    this.destroyed = true;\n    this.state.fill(0);\n  }\n\n  _cloneInto(to) {\n    const {\n      blockLen,\n      suffix,\n      outputLen,\n      rounds,\n      enableXOF\n    } = this;\n    to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n    to.state32.set(this.state32);\n    to.pos = this.pos;\n    to.posOut = this.posOut;\n    to.finished = this.finished;\n    to.rounds = rounds; // Suffix can change in cSHAKE\n\n    to.suffix = suffix;\n    to.outputLen = outputLen;\n    to.enableXOF = enableXOF;\n    to.destroyed = this.destroyed;\n    return to;\n  }\n\n}\n\nexports.Keccak = Keccak;\n\nconst gen = (suffix, blockLen, outputLen) => (0, utils_js_1.wrapConstructor)(() => new Keccak(blockLen, suffix, outputLen));\n\nexports.sha3_224 = gen(0x06, 144, 224 / 8);\nexports.sha3_256 = gen(0x06, 136, 256 / 8);\nexports.sha3_384 = gen(0x06, 104, 384 / 8);\nexports.sha3_512 = gen(0x06, 72, 512 / 8);\nexports.keccak_224 = gen(0x01, 144, 224 / 8);\nexports.keccak_256 = gen(0x01, 136, 256 / 8);\nexports.keccak_384 = gen(0x01, 104, 384 / 8);\nexports.keccak_512 = gen(0x01, 72, 512 / 8);\n\nconst genShake = (suffix, blockLen, outputLen) => (0, utils_js_1.wrapConstructorWithOpts)(function () {\n  let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return new Keccak(blockLen, suffix, opts.dkLen !== undefined ? opts.dkLen : outputLen, true);\n});\n\nexports.shake128 = genShake(0x1f, 168, 128 / 8);\nexports.shake256 = genShake(0x1f, 136, 256 / 8);","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","defineProperty","enumerable","get","__setModuleDefault","v","value","__importStar","mod","__esModule","result","prototype","hasOwnProperty","call","exports","shake256","shake128","keccak_512","keccak_384","keccak_256","keccak_224","sha3_512","sha3_384","sha3_256","sha3_224","Keccak","keccakP","u64","require","utils_js_1","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_0n","BigInt","_1n","_2n","_7n","_256n","_0x71n","round","R","x","y","push","t","j","SHA3_IOTA_H","SHA3_IOTA_L","split","rotlH","h","l","s","rotlBH","rotlSH","rotlL","rotlBL","rotlSL","rounds","B","Uint32Array","idx1","idx0","B0","B1","Th","Tl","curH","curL","shift","PI","fill","Hash","constructor","blockLen","suffix","outputLen","enableXOF","pos","posOut","finished","destroyed","assertNumber","Error","state","Uint8Array","state32","u32","keccak","update","data","toBytes","len","length","take","Math","min","i","finish","writeInto","out","set","subarray","xofInto","xof","bytes","digestInto","destroy","digest","_cloneInto","to","gen","wrapConstructor","genShake","wrapConstructorWithOpts","opts","dkLen"],"sources":["/Users/marijoradman/y22/miami6/miami-hackathon-starknet-p2e/node_modules/@noble/hashes/sha3.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.shake256 = exports.shake128 = exports.keccak_512 = exports.keccak_384 = exports.keccak_256 = exports.keccak_224 = exports.sha3_512 = exports.sha3_384 = exports.sha3_256 = exports.sha3_224 = exports.Keccak = exports.keccakP = void 0;\nconst u64 = __importStar(require(\"./_u64.js\"));\nconst utils_js_1 = require(\"./utils.js\");\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [[], [], []];\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _7n = BigInt(7);\nconst _256n = BigInt(256);\nconst _0x71n = BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = u64.split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => s > 32 ? u64.rotlBH(h, l, s) : u64.rotlSH(h, l, s);\nconst rotlL = (h, l, s) => s > 32 ? u64.rotlBL(h, l, s) : u64.rotlSL(h, l, s);\n// Same as keccakf1600, but allows to skip some rounds\nfunction keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexports.keccakP = keccakP;\nclass Keccak extends utils_js_1.Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        (0, utils_js_1.assertNumber)(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = (0, utils_js_1.u32)(this.state);\n    }\n    keccak() {\n        keccakP(this.state32, this.rounds);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        if (this.destroyed)\n            throw new Error('instance is destroyed');\n        if (this.finished)\n            throw new Error('digest() was already called');\n        const { blockLen, state } = this;\n        data = (0, utils_js_1.toBytes)(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        if (this.destroyed)\n            throw new Error('instance is destroyed');\n        if (!(out instanceof Uint8Array))\n            throw new Error('Keccak: invalid output buffer');\n        this.finish();\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= this.blockLen)\n                this.keccak();\n            const take = Math.min(this.blockLen - this.posOut, len - pos);\n            out.set(this.state.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        (0, utils_js_1.assertNumber)(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        if (out.length < this.outputLen)\n            throw new Error('Keccak: invalid output buffer');\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.finish();\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nexports.Keccak = Keccak;\nconst gen = (suffix, blockLen, outputLen) => (0, utils_js_1.wrapConstructor)(() => new Keccak(blockLen, suffix, outputLen));\nexports.sha3_224 = gen(0x06, 144, 224 / 8);\nexports.sha3_256 = gen(0x06, 136, 256 / 8);\nexports.sha3_384 = gen(0x06, 104, 384 / 8);\nexports.sha3_512 = gen(0x06, 72, 512 / 8);\nexports.keccak_224 = gen(0x01, 144, 224 / 8);\nexports.keccak_256 = gen(0x01, 136, 256 / 8);\nexports.keccak_384 = gen(0x01, 104, 384 / 8);\nexports.keccak_512 = gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => (0, utils_js_1.wrapConstructorWithOpts)((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen !== undefined ? opts.dkLen : outputLen, true));\nexports.shake128 = genShake(0x1f, 168, 128 / 8);\nexports.shake256 = genShake(0x1f, 136, 256 / 8);\n"],"mappings":"AAAA;;AACA,IAAIA,eAAe,GAAI,QAAQ,KAAKA,eAAd,KAAmCC,MAAM,CAACC,MAAP,GAAiB,UAASC,CAAT,EAAYC,CAAZ,EAAeC,CAAf,EAAkBC,EAAlB,EAAsB;EAC5F,IAAIA,EAAE,KAAKC,SAAX,EAAsBD,EAAE,GAAGD,CAAL;EACtBJ,MAAM,CAACO,cAAP,CAAsBL,CAAtB,EAAyBG,EAAzB,EAA6B;IAAEG,UAAU,EAAE,IAAd;IAAoBC,GAAG,EAAE,YAAW;MAAE,OAAON,CAAC,CAACC,CAAD,CAAR;IAAc;EAApD,CAA7B;AACH,CAHwD,GAGnD,UAASF,CAAT,EAAYC,CAAZ,EAAeC,CAAf,EAAkBC,EAAlB,EAAsB;EACxB,IAAIA,EAAE,KAAKC,SAAX,EAAsBD,EAAE,GAAGD,CAAL;EACtBF,CAAC,CAACG,EAAD,CAAD,GAAQF,CAAC,CAACC,CAAD,CAAT;AACH,CANqB,CAAtB;;AAOA,IAAIM,kBAAkB,GAAI,QAAQ,KAAKA,kBAAd,KAAsCV,MAAM,CAACC,MAAP,GAAiB,UAASC,CAAT,EAAYS,CAAZ,EAAe;EAC3FX,MAAM,CAACO,cAAP,CAAsBL,CAAtB,EAAyB,SAAzB,EAAoC;IAAEM,UAAU,EAAE,IAAd;IAAoBI,KAAK,EAAED;EAA3B,CAApC;AACH,CAF8D,GAE1D,UAAST,CAAT,EAAYS,CAAZ,EAAe;EAChBT,CAAC,CAAC,SAAD,CAAD,GAAeS,CAAf;AACH,CAJwB,CAAzB;;AAKA,IAAIE,YAAY,GAAI,QAAQ,KAAKA,YAAd,IAA+B,UAAUC,GAAV,EAAe;EAC7D,IAAIA,GAAG,IAAIA,GAAG,CAACC,UAAf,EAA2B,OAAOD,GAAP;EAC3B,IAAIE,MAAM,GAAG,EAAb;EACA,IAAIF,GAAG,IAAI,IAAX,EAAiB,KAAK,IAAIV,CAAT,IAAcU,GAAd,EAAmB,IAAIV,CAAC,KAAK,SAAN,IAAmBJ,MAAM,CAACiB,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCL,GAArC,EAA0CV,CAA1C,CAAvB,EAAqEL,eAAe,CAACiB,MAAD,EAASF,GAAT,EAAcV,CAAd,CAAf;;EACzGM,kBAAkB,CAACM,MAAD,EAASF,GAAT,CAAlB;;EACA,OAAOE,MAAP;AACH,CAND;;AAOAhB,MAAM,CAACO,cAAP,CAAsBa,OAAtB,EAA+B,YAA/B,EAA6C;EAAER,KAAK,EAAE;AAAT,CAA7C;AACAQ,OAAO,CAACC,QAAR,GAAmBD,OAAO,CAACE,QAAR,GAAmBF,OAAO,CAACG,UAAR,GAAqBH,OAAO,CAACI,UAAR,GAAqBJ,OAAO,CAACK,UAAR,GAAqBL,OAAO,CAACM,UAAR,GAAqBN,OAAO,CAACO,QAAR,GAAmBP,OAAO,CAACQ,QAAR,GAAmBR,OAAO,CAACS,QAAR,GAAmBT,OAAO,CAACU,QAAR,GAAmBV,OAAO,CAACW,MAAR,GAAiBX,OAAO,CAACY,OAAR,GAAkB,KAAK,CAA9O;;AACA,MAAMC,GAAG,GAAGpB,YAAY,CAACqB,OAAO,CAAC,WAAD,CAAR,CAAxB;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAC,YAAD,CAA1B,C,CACA;;;AACA,MAAM,CAACE,OAAD,EAAUC,SAAV,EAAqBC,UAArB,IAAmC,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CAAzC;;AACA,MAAMC,GAAG,GAAGC,MAAM,CAAC,CAAD,CAAlB;;AACA,MAAMC,GAAG,GAAGD,MAAM,CAAC,CAAD,CAAlB;;AACA,MAAME,GAAG,GAAGF,MAAM,CAAC,CAAD,CAAlB;;AACA,MAAMG,GAAG,GAAGH,MAAM,CAAC,CAAD,CAAlB;;AACA,MAAMI,KAAK,GAAGJ,MAAM,CAAC,GAAD,CAApB;;AACA,MAAMK,MAAM,GAAGL,MAAM,CAAC,IAAD,CAArB;;AACA,KAAK,IAAIM,KAAK,GAAG,CAAZ,EAAeC,CAAC,GAAGN,GAAnB,EAAwBO,CAAC,GAAG,CAA5B,EAA+BC,CAAC,GAAG,CAAxC,EAA2CH,KAAK,GAAG,EAAnD,EAAuDA,KAAK,EAA5D,EAAgE;EAC5D;EACA,CAACE,CAAD,EAAIC,CAAJ,IAAS,CAACA,CAAD,EAAI,CAAC,IAAID,CAAJ,GAAQ,IAAIC,CAAb,IAAkB,CAAtB,CAAT;EACAb,OAAO,CAACc,IAAR,CAAa,KAAK,IAAID,CAAJ,GAAQD,CAAb,CAAb,EAH4D,CAI5D;;EACAX,SAAS,CAACa,IAAV,CAAiB,CAACJ,KAAK,GAAG,CAAT,KAAeA,KAAK,GAAG,CAAvB,CAAD,GAA8B,CAA/B,GAAoC,EAAnD,EAL4D,CAM5D;;EACA,IAAIK,CAAC,GAAGZ,GAAR;;EACA,KAAK,IAAIa,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;IACxBL,CAAC,GAAG,CAAEA,CAAC,IAAIN,GAAN,GAAc,CAACM,CAAC,IAAIJ,GAAN,IAAaE,MAA5B,IAAuCD,KAA3C;IACA,IAAIG,CAAC,GAAGL,GAAR,EACIS,CAAC,IAAIV,GAAG,IAAK,CAACA,GAAG,IAAID,MAAM,CAACY,CAAD,CAAd,IAAqBX,GAAlC;EACP;;EACDH,UAAU,CAACY,IAAX,CAAgBC,CAAhB;AACH;;AACD,MAAM,CAACE,WAAD,EAAcC,WAAd,IAA6BrB,GAAG,CAACsB,KAAJ,CAAUjB,UAAV,EAAsB,IAAtB,CAAnC,C,CACA;;AACA,MAAMkB,KAAK,GAAG,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,KAAaA,CAAC,GAAG,EAAJ,GAAS1B,GAAG,CAAC2B,MAAJ,CAAWH,CAAX,EAAcC,CAAd,EAAiBC,CAAjB,CAAT,GAA+B1B,GAAG,CAAC4B,MAAJ,CAAWJ,CAAX,EAAcC,CAAd,EAAiBC,CAAjB,CAA1D;;AACA,MAAMG,KAAK,GAAG,CAACL,CAAD,EAAIC,CAAJ,EAAOC,CAAP,KAAaA,CAAC,GAAG,EAAJ,GAAS1B,GAAG,CAAC8B,MAAJ,CAAWN,CAAX,EAAcC,CAAd,EAAiBC,CAAjB,CAAT,GAA+B1B,GAAG,CAAC+B,MAAJ,CAAWP,CAAX,EAAcC,CAAd,EAAiBC,CAAjB,CAA1D,C,CACA;;;AACA,SAAS3B,OAAT,CAAiB2B,CAAjB,EAAiC;EAAA,IAAbM,MAAa,uEAAJ,EAAI;EAC7B,MAAMC,CAAC,GAAG,IAAIC,WAAJ,CAAgB,IAAI,CAApB,CAAV,CAD6B,CAE7B;;EACA,KAAK,IAAIrB,KAAK,GAAG,KAAKmB,MAAtB,EAA8BnB,KAAK,GAAG,EAAtC,EAA0CA,KAAK,EAA/C,EAAmD;IAC/C;IACA,KAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EACIkB,CAAC,CAAClB,CAAD,CAAD,GAAOW,CAAC,CAACX,CAAD,CAAD,GAAOW,CAAC,CAACX,CAAC,GAAG,EAAL,CAAR,GAAmBW,CAAC,CAACX,CAAC,GAAG,EAAL,CAApB,GAA+BW,CAAC,CAACX,CAAC,GAAG,EAAL,CAAhC,GAA2CW,CAAC,CAACX,CAAC,GAAG,EAAL,CAAnD;;IACJ,KAAK,IAAIA,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,IAAI,CAA7B,EAAgC;MAC5B,MAAMoB,IAAI,GAAG,CAACpB,CAAC,GAAG,CAAL,IAAU,EAAvB;MACA,MAAMqB,IAAI,GAAG,CAACrB,CAAC,GAAG,CAAL,IAAU,EAAvB;MACA,MAAMsB,EAAE,GAAGJ,CAAC,CAACG,IAAD,CAAZ;MACA,MAAME,EAAE,GAAGL,CAAC,CAACG,IAAI,GAAG,CAAR,CAAZ;MACA,MAAMG,EAAE,GAAGhB,KAAK,CAACc,EAAD,EAAKC,EAAL,EAAS,CAAT,CAAL,GAAmBL,CAAC,CAACE,IAAD,CAA/B;MACA,MAAMK,EAAE,GAAGX,KAAK,CAACQ,EAAD,EAAKC,EAAL,EAAS,CAAT,CAAL,GAAmBL,CAAC,CAACE,IAAI,GAAG,CAAR,CAA/B;;MACA,KAAK,IAAInB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,IAAI,EAA7B,EAAiC;QAC7BU,CAAC,CAACX,CAAC,GAAGC,CAAL,CAAD,IAAYuB,EAAZ;QACAb,CAAC,CAACX,CAAC,GAAGC,CAAJ,GAAQ,CAAT,CAAD,IAAgBwB,EAAhB;MACH;IACJ,CAf8C,CAgB/C;;;IACA,IAAIC,IAAI,GAAGf,CAAC,CAAC,CAAD,CAAZ;IACA,IAAIgB,IAAI,GAAGhB,CAAC,CAAC,CAAD,CAAZ;;IACA,KAAK,IAAIR,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;MACzB,MAAMyB,KAAK,GAAGvC,SAAS,CAACc,CAAD,CAAvB;MACA,MAAMqB,EAAE,GAAGhB,KAAK,CAACkB,IAAD,EAAOC,IAAP,EAAaC,KAAb,CAAhB;MACA,MAAMH,EAAE,GAAGX,KAAK,CAACY,IAAD,EAAOC,IAAP,EAAaC,KAAb,CAAhB;MACA,MAAMC,EAAE,GAAGzC,OAAO,CAACe,CAAD,CAAlB;MACAuB,IAAI,GAAGf,CAAC,CAACkB,EAAD,CAAR;MACAF,IAAI,GAAGhB,CAAC,CAACkB,EAAE,GAAG,CAAN,CAAR;MACAlB,CAAC,CAACkB,EAAD,CAAD,GAAQL,EAAR;MACAb,CAAC,CAACkB,EAAE,GAAG,CAAN,CAAD,GAAYJ,EAAZ;IACH,CA5B8C,CA6B/C;;;IACA,KAAK,IAAIxB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,IAAI,EAA7B,EAAiC;MAC7B,KAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EACIkB,CAAC,CAAClB,CAAD,CAAD,GAAOW,CAAC,CAACV,CAAC,GAAGD,CAAL,CAAR;;MACJ,KAAK,IAAIA,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EACIW,CAAC,CAACV,CAAC,GAAGD,CAAL,CAAD,IAAY,CAACkB,CAAC,CAAC,CAAClB,CAAC,GAAG,CAAL,IAAU,EAAX,CAAF,GAAmBkB,CAAC,CAAC,CAAClB,CAAC,GAAG,CAAL,IAAU,EAAX,CAAhC;IACP,CAnC8C,CAoC/C;;;IACAW,CAAC,CAAC,CAAD,CAAD,IAAQN,WAAW,CAACP,KAAD,CAAnB;IACAa,CAAC,CAAC,CAAD,CAAD,IAAQL,WAAW,CAACR,KAAD,CAAnB;EACH;;EACDoB,CAAC,CAACY,IAAF,CAAO,CAAP;AACH;;AACD1D,OAAO,CAACY,OAAR,GAAkBA,OAAlB;;AACA,MAAMD,MAAN,SAAqBI,UAAU,CAAC4C,IAAhC,CAAqC;EACjC;EACAC,WAAW,CAACC,QAAD,EAAWC,MAAX,EAAmBC,SAAnB,EAA8D;IAAA,IAAhCC,SAAgC,uEAApB,KAAoB;IAAA,IAAbnB,MAAa,uEAAJ,EAAI;IACrE;IACA,KAAKgB,QAAL,GAAgBA,QAAhB;IACA,KAAKC,MAAL,GAAcA,MAAd;IACA,KAAKC,SAAL,GAAiBA,SAAjB;IACA,KAAKC,SAAL,GAAiBA,SAAjB;IACA,KAAKnB,MAAL,GAAcA,MAAd;IACA,KAAKoB,GAAL,GAAW,CAAX;IACA,KAAKC,MAAL,GAAc,CAAd;IACA,KAAKC,QAAL,GAAgB,KAAhB;IACA,KAAKC,SAAL,GAAiB,KAAjB,CAVqE,CAWrE;;IACA,CAAC,GAAGrD,UAAU,CAACsD,YAAf,EAA6BN,SAA7B,EAZqE,CAarE;;IACA,IAAI,KAAK,KAAKF,QAAV,IAAsB,KAAKA,QAAL,IAAiB,GAA3C,EACI,MAAM,IAAIS,KAAJ,CAAU,0CAAV,CAAN;IACJ,KAAKC,KAAL,GAAa,IAAIC,UAAJ,CAAe,GAAf,CAAb;IACA,KAAKC,OAAL,GAAe,CAAC,GAAG1D,UAAU,CAAC2D,GAAf,EAAoB,KAAKH,KAAzB,CAAf;EACH;;EACDI,MAAM,GAAG;IACL/D,OAAO,CAAC,KAAK6D,OAAN,EAAe,KAAK5B,MAApB,CAAP;IACA,KAAKqB,MAAL,GAAc,CAAd;IACA,KAAKD,GAAL,GAAW,CAAX;EACH;;EACDW,MAAM,CAACC,IAAD,EAAO;IACT,IAAI,KAAKT,SAAT,EACI,MAAM,IAAIE,KAAJ,CAAU,uBAAV,CAAN;IACJ,IAAI,KAAKH,QAAT,EACI,MAAM,IAAIG,KAAJ,CAAU,6BAAV,CAAN;IACJ,MAAM;MAAET,QAAF;MAAYU;IAAZ,IAAsB,IAA5B;IACAM,IAAI,GAAG,CAAC,GAAG9D,UAAU,CAAC+D,OAAf,EAAwBD,IAAxB,CAAP;IACA,MAAME,GAAG,GAAGF,IAAI,CAACG,MAAjB;;IACA,KAAK,IAAIf,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGc,GAAxB,GAA8B;MAC1B,MAAME,IAAI,GAAGC,IAAI,CAACC,GAAL,CAAStB,QAAQ,GAAG,KAAKI,GAAzB,EAA8Bc,GAAG,GAAGd,GAApC,CAAb;;MACA,KAAK,IAAImB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,IAApB,EAA0BG,CAAC,EAA3B,EACIb,KAAK,CAAC,KAAKN,GAAL,EAAD,CAAL,IAAqBY,IAAI,CAACZ,GAAG,EAAJ,CAAzB;;MACJ,IAAI,KAAKA,GAAL,KAAaJ,QAAjB,EACI,KAAKc,MAAL;IACP;;IACD,OAAO,IAAP;EACH;;EACDU,MAAM,GAAG;IACL,IAAI,KAAKlB,QAAT,EACI;IACJ,KAAKA,QAAL,GAAgB,IAAhB;IACA,MAAM;MAAEI,KAAF;MAAST,MAAT;MAAiBG,GAAjB;MAAsBJ;IAAtB,IAAmC,IAAzC,CAJK,CAKL;;IACAU,KAAK,CAACN,GAAD,CAAL,IAAcH,MAAd;IACA,IAAI,CAACA,MAAM,GAAG,IAAV,MAAoB,CAApB,IAAyBG,GAAG,KAAKJ,QAAQ,GAAG,CAAhD,EACI,KAAKc,MAAL;IACJJ,KAAK,CAACV,QAAQ,GAAG,CAAZ,CAAL,IAAuB,IAAvB;IACA,KAAKc,MAAL;EACH;;EACDW,SAAS,CAACC,GAAD,EAAM;IACX,IAAI,KAAKnB,SAAT,EACI,MAAM,IAAIE,KAAJ,CAAU,uBAAV,CAAN;IACJ,IAAI,EAAEiB,GAAG,YAAYf,UAAjB,CAAJ,EACI,MAAM,IAAIF,KAAJ,CAAU,+BAAV,CAAN;IACJ,KAAKe,MAAL;;IACA,KAAK,IAAIpB,GAAG,GAAG,CAAV,EAAac,GAAG,GAAGQ,GAAG,CAACP,MAA5B,EAAoCf,GAAG,GAAGc,GAA1C,GAAgD;MAC5C,IAAI,KAAKb,MAAL,IAAe,KAAKL,QAAxB,EACI,KAAKc,MAAL;MACJ,MAAMM,IAAI,GAAGC,IAAI,CAACC,GAAL,CAAS,KAAKtB,QAAL,GAAgB,KAAKK,MAA9B,EAAsCa,GAAG,GAAGd,GAA5C,CAAb;MACAsB,GAAG,CAACC,GAAJ,CAAQ,KAAKjB,KAAL,CAAWkB,QAAX,CAAoB,KAAKvB,MAAzB,EAAiC,KAAKA,MAAL,GAAce,IAA/C,CAAR,EAA8DhB,GAA9D;MACA,KAAKC,MAAL,IAAee,IAAf;MACAhB,GAAG,IAAIgB,IAAP;IACH;;IACD,OAAOM,GAAP;EACH;;EACDG,OAAO,CAACH,GAAD,EAAM;IACT;IACA,IAAI,CAAC,KAAKvB,SAAV,EACI,MAAM,IAAIM,KAAJ,CAAU,uCAAV,CAAN;IACJ,OAAO,KAAKgB,SAAL,CAAeC,GAAf,CAAP;EACH;;EACDI,GAAG,CAACC,KAAD,EAAQ;IACP,CAAC,GAAG7E,UAAU,CAACsD,YAAf,EAA6BuB,KAA7B;IACA,OAAO,KAAKF,OAAL,CAAa,IAAIlB,UAAJ,CAAeoB,KAAf,CAAb,CAAP;EACH;;EACDC,UAAU,CAACN,GAAD,EAAM;IACZ,IAAIA,GAAG,CAACP,MAAJ,GAAa,KAAKjB,SAAtB,EACI,MAAM,IAAIO,KAAJ,CAAU,+BAAV,CAAN;IACJ,IAAI,KAAKH,QAAT,EACI,MAAM,IAAIG,KAAJ,CAAU,6BAAV,CAAN;IACJ,KAAKe,MAAL;IACA,KAAKC,SAAL,CAAeC,GAAf;IACA,KAAKO,OAAL;IACA,OAAOP,GAAP;EACH;;EACDQ,MAAM,GAAG;IACL,OAAO,KAAKF,UAAL,CAAgB,IAAIrB,UAAJ,CAAe,KAAKT,SAApB,CAAhB,CAAP;EACH;;EACD+B,OAAO,GAAG;IACN,KAAK1B,SAAL,GAAiB,IAAjB;IACA,KAAKG,KAAL,CAAWb,IAAX,CAAgB,CAAhB;EACH;;EACDsC,UAAU,CAACC,EAAD,EAAK;IACX,MAAM;MAAEpC,QAAF;MAAYC,MAAZ;MAAoBC,SAApB;MAA+BlB,MAA/B;MAAuCmB;IAAvC,IAAqD,IAA3D;IACAiC,EAAE,KAAKA,EAAE,GAAG,IAAItF,MAAJ,CAAWkD,QAAX,EAAqBC,MAArB,EAA6BC,SAA7B,EAAwCC,SAAxC,EAAmDnB,MAAnD,CAAV,CAAF;IACAoD,EAAE,CAACxB,OAAH,CAAWe,GAAX,CAAe,KAAKf,OAApB;IACAwB,EAAE,CAAChC,GAAH,GAAS,KAAKA,GAAd;IACAgC,EAAE,CAAC/B,MAAH,GAAY,KAAKA,MAAjB;IACA+B,EAAE,CAAC9B,QAAH,GAAc,KAAKA,QAAnB;IACA8B,EAAE,CAACpD,MAAH,GAAYA,MAAZ,CAPW,CAQX;;IACAoD,EAAE,CAACnC,MAAH,GAAYA,MAAZ;IACAmC,EAAE,CAAClC,SAAH,GAAeA,SAAf;IACAkC,EAAE,CAACjC,SAAH,GAAeA,SAAf;IACAiC,EAAE,CAAC7B,SAAH,GAAe,KAAKA,SAApB;IACA,OAAO6B,EAAP;EACH;;AAhHgC;;AAkHrCjG,OAAO,CAACW,MAAR,GAAiBA,MAAjB;;AACA,MAAMuF,GAAG,GAAG,CAACpC,MAAD,EAASD,QAAT,EAAmBE,SAAnB,KAAiC,CAAC,GAAGhD,UAAU,CAACoF,eAAf,EAAgC,MAAM,IAAIxF,MAAJ,CAAWkD,QAAX,EAAqBC,MAArB,EAA6BC,SAA7B,CAAtC,CAA7C;;AACA/D,OAAO,CAACU,QAAR,GAAmBwF,GAAG,CAAC,IAAD,EAAO,GAAP,EAAY,MAAM,CAAlB,CAAtB;AACAlG,OAAO,CAACS,QAAR,GAAmByF,GAAG,CAAC,IAAD,EAAO,GAAP,EAAY,MAAM,CAAlB,CAAtB;AACAlG,OAAO,CAACQ,QAAR,GAAmB0F,GAAG,CAAC,IAAD,EAAO,GAAP,EAAY,MAAM,CAAlB,CAAtB;AACAlG,OAAO,CAACO,QAAR,GAAmB2F,GAAG,CAAC,IAAD,EAAO,EAAP,EAAW,MAAM,CAAjB,CAAtB;AACAlG,OAAO,CAACM,UAAR,GAAqB4F,GAAG,CAAC,IAAD,EAAO,GAAP,EAAY,MAAM,CAAlB,CAAxB;AACAlG,OAAO,CAACK,UAAR,GAAqB6F,GAAG,CAAC,IAAD,EAAO,GAAP,EAAY,MAAM,CAAlB,CAAxB;AACAlG,OAAO,CAACI,UAAR,GAAqB8F,GAAG,CAAC,IAAD,EAAO,GAAP,EAAY,MAAM,CAAlB,CAAxB;AACAlG,OAAO,CAACG,UAAR,GAAqB+F,GAAG,CAAC,IAAD,EAAO,EAAP,EAAW,MAAM,CAAjB,CAAxB;;AACA,MAAME,QAAQ,GAAG,CAACtC,MAAD,EAASD,QAAT,EAAmBE,SAAnB,KAAiC,CAAC,GAAGhD,UAAU,CAACsF,uBAAf,EAAwC;EAAA,IAACC,IAAD,uEAAQ,EAAR;EAAA,OAAe,IAAI3F,MAAJ,CAAWkD,QAAX,EAAqBC,MAArB,EAA6BwC,IAAI,CAACC,KAAL,KAAerH,SAAf,GAA2BoH,IAAI,CAACC,KAAhC,GAAwCxC,SAArE,EAAgF,IAAhF,CAAf;AAAA,CAAxC,CAAlD;;AACA/D,OAAO,CAACE,QAAR,GAAmBkG,QAAQ,CAAC,IAAD,EAAO,GAAP,EAAY,MAAM,CAAlB,CAA3B;AACApG,OAAO,CAACC,QAAR,GAAmBmG,QAAQ,CAAC,IAAD,EAAO,GAAP,EAAY,MAAM,CAAlB,CAA3B"},"metadata":{},"sourceType":"script"}