{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}; // This implements the resolution of a Transaction using Ledger's own API\n\n\nimport { log } from \"@ledgerhq/logs\";\nimport { Interface } from \"@ethersproject/abi\";\nimport { loadInfosForContractMethod } from \"./contracts\";\nimport { byContractAddressAndChainId } from \"./erc20\";\nimport { getNFTInfo, loadNftPlugin } from \"./nfts\";\nimport { decodeTxInfo } from \"../../utils\";\nvar ledgerService = {\n  resolveTransaction: function (rawTxHex, loadConfig, resolutionConfig) {\n    return __awaiter(void 0, void 0, void 0, function () {\n      function provideERC20TokenInformation(dataHex) {\n        resolution.erc20Tokens.push(dataHex);\n      }\n\n      function provideNFTInformation(dataHex) {\n        resolution.nfts.push(dataHex);\n      }\n\n      function setExternalPlugin(payload, signature) {\n        resolution.externalPlugin.push({\n          payload: payload,\n          signature: signature\n        });\n      }\n\n      function setPlugin(dataHex) {\n        resolution.plugin.push(dataHex);\n      }\n\n      var resolution, rawTx, _a, decodedTx, chainIdTruncated, provideForContract, selector, nftPluginPayload, _b, infos, _c, plugin, payload, signature, erc20OfInterest, abi, contract, args, erc20OfInterest_1, erc20OfInterest_1_1, path, address, e_1_1;\n\n      var e_1, _d;\n\n      return __generator(this, function (_e) {\n        switch (_e.label) {\n          case 0:\n            resolution = {\n              erc20Tokens: [],\n              nfts: [],\n              externalPlugin: [],\n              plugin: []\n            };\n            rawTx = Buffer.from(rawTxHex, \"hex\");\n            _a = decodeTxInfo(rawTx), decodedTx = _a.decodedTx, chainIdTruncated = _a.chainIdTruncated;\n\n            provideForContract = function (address) {\n              return __awaiter(void 0, void 0, void 0, function () {\n                var nftInfo, _a, erc20Info;\n\n                return __generator(this, function (_b) {\n                  switch (_b.label) {\n                    case 0:\n                      if (!resolutionConfig.nft) return [3\n                      /*break*/\n                      , 2];\n                      return [4\n                      /*yield*/\n                      , getNFTInfo(address, chainIdTruncated, loadConfig)];\n\n                    case 1:\n                      _a = _b.sent();\n                      return [3\n                      /*break*/\n                      , 3];\n\n                    case 2:\n                      _a = null;\n                      _b.label = 3;\n\n                    case 3:\n                      nftInfo = _a;\n\n                      if (nftInfo) {\n                        log(\"ethereum\", \"loaded nft info for \" + nftInfo.contractAddress + \" (\" + nftInfo.collectionName + \")\");\n                        provideNFTInformation(nftInfo.data);\n                      } else {\n                        erc20Info = byContractAddressAndChainId(address, chainIdTruncated);\n\n                        if (erc20Info) {\n                          log(\"ethereum\", \"loaded erc20token info for \" + erc20Info.contractAddress + \" (\" + erc20Info.ticker + \")\");\n                          provideERC20TokenInformation(erc20Info.data.toString(\"hex\"));\n                        }\n                      }\n\n                      return [2\n                      /*return*/\n                      ];\n                  }\n                });\n              });\n            };\n\n            if (!(decodedTx.data.length >= 10)) return [3\n            /*break*/\n            , 19];\n            selector = decodedTx.data.substring(0, 10);\n            if (!resolutionConfig.nft) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , loadNftPlugin(decodedTx.to, selector, chainIdTruncated, loadConfig)];\n\n          case 1:\n            _b = _e.sent();\n            return [3\n            /*break*/\n            , 3];\n\n          case 2:\n            _b = null;\n            _e.label = 3;\n\n          case 3:\n            nftPluginPayload = _b;\n            if (!nftPluginPayload) return [3\n            /*break*/\n            , 4];\n            setPlugin(nftPluginPayload);\n            return [3\n            /*break*/\n            , 17];\n\n          case 4:\n            if (!resolutionConfig.externalPlugins) return [3\n            /*break*/\n            , 6];\n            return [4\n            /*yield*/\n            , loadInfosForContractMethod(decodedTx.to, selector, chainIdTruncated, loadConfig)];\n\n          case 5:\n            _c = _e.sent();\n            return [3\n            /*break*/\n            , 7];\n\n          case 6:\n            _c = null;\n            _e.label = 7;\n\n          case 7:\n            infos = _c;\n            if (!infos) return [3\n            /*break*/\n            , 16];\n            plugin = infos.plugin, payload = infos.payload, signature = infos.signature, erc20OfInterest = infos.erc20OfInterest, abi = infos.abi;\n\n            if (plugin) {\n              log(\"ethereum\", \"found plugin for \" + selector);\n              setExternalPlugin(payload, signature);\n            }\n\n            if (!(erc20OfInterest && erc20OfInterest.length && abi)) return [3\n            /*break*/\n            , 15];\n            contract = new Interface(abi);\n            args = contract.parseTransaction(decodedTx).args;\n            _e.label = 8;\n\n          case 8:\n            _e.trys.push([8, 13, 14, 15]);\n\n            erc20OfInterest_1 = __values(erc20OfInterest), erc20OfInterest_1_1 = erc20OfInterest_1.next();\n            _e.label = 9;\n\n          case 9:\n            if (!!erc20OfInterest_1_1.done) return [3\n            /*break*/\n            , 12];\n            path = erc20OfInterest_1_1.value;\n            address = path.split(\".\").reduce(function (value, seg) {\n              if (seg === \"-1\" && Array.isArray(value)) {\n                return value[value.length - 1];\n              }\n\n              return value[seg];\n            }, args);\n            return [4\n            /*yield*/\n            , provideForContract(address)];\n\n          case 10:\n            _e.sent();\n\n            _e.label = 11;\n\n          case 11:\n            erc20OfInterest_1_1 = erc20OfInterest_1.next();\n            return [3\n            /*break*/\n            , 9];\n\n          case 12:\n            return [3\n            /*break*/\n            , 15];\n\n          case 13:\n            e_1_1 = _e.sent();\n            e_1 = {\n              error: e_1_1\n            };\n            return [3\n            /*break*/\n            , 15];\n\n          case 14:\n            try {\n              if (erc20OfInterest_1_1 && !erc20OfInterest_1_1.done && (_d = erc20OfInterest_1[\"return\"])) _d.call(erc20OfInterest_1);\n            } finally {\n              if (e_1) throw e_1.error;\n            }\n\n            return [7\n            /*endfinally*/\n            ];\n\n          case 15:\n            return [3\n            /*break*/\n            , 17];\n\n          case 16:\n            log(\"ethereum\", \"no infos for selector \" + selector);\n            _e.label = 17;\n\n          case 17:\n            return [4\n            /*yield*/\n            , provideForContract(decodedTx.to)];\n\n          case 18:\n            _e.sent();\n\n            _e.label = 19;\n\n          case 19:\n            return [2\n            /*return*/\n            , resolution];\n        }\n      });\n    });\n  }\n};\nexport default ledgerService;","map":{"version":3,"sources":["../../../src/services/ledger/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n// This implements the resolution of a Transaction using Ledger's own API\nimport { log } from \"@ledgerhq/logs\";\nimport { Interface } from \"@ethersproject/abi\";\nimport { loadInfosForContractMethod } from \"./contracts\";\nimport { byContractAddressAndChainId } from \"./erc20\";\nimport { getNFTInfo, loadNftPlugin } from \"./nfts\";\nimport { decodeTxInfo } from \"../../utils\";\nvar ledgerService = {\n    resolveTransaction: function (rawTxHex, loadConfig, resolutionConfig) { return __awaiter(void 0, void 0, void 0, function () {\n        function provideERC20TokenInformation(dataHex) {\n            resolution.erc20Tokens.push(dataHex);\n        }\n        function provideNFTInformation(dataHex) {\n            resolution.nfts.push(dataHex);\n        }\n        function setExternalPlugin(payload, signature) {\n            resolution.externalPlugin.push({ payload: payload, signature: signature });\n        }\n        function setPlugin(dataHex) {\n            resolution.plugin.push(dataHex);\n        }\n        var resolution, rawTx, _a, decodedTx, chainIdTruncated, provideForContract, selector, nftPluginPayload, _b, infos, _c, plugin, payload, signature, erc20OfInterest, abi, contract, args, erc20OfInterest_1, erc20OfInterest_1_1, path, address, e_1_1;\n        var e_1, _d;\n        return __generator(this, function (_e) {\n            switch (_e.label) {\n                case 0:\n                    resolution = {\n                        erc20Tokens: [],\n                        nfts: [],\n                        externalPlugin: [],\n                        plugin: []\n                    };\n                    rawTx = Buffer.from(rawTxHex, \"hex\");\n                    _a = decodeTxInfo(rawTx), decodedTx = _a.decodedTx, chainIdTruncated = _a.chainIdTruncated;\n                    provideForContract = function (address) { return __awaiter(void 0, void 0, void 0, function () {\n                        var nftInfo, _a, erc20Info;\n                        return __generator(this, function (_b) {\n                            switch (_b.label) {\n                                case 0:\n                                    if (!resolutionConfig.nft) return [3 /*break*/, 2];\n                                    return [4 /*yield*/, getNFTInfo(address, chainIdTruncated, loadConfig)];\n                                case 1:\n                                    _a = _b.sent();\n                                    return [3 /*break*/, 3];\n                                case 2:\n                                    _a = null;\n                                    _b.label = 3;\n                                case 3:\n                                    nftInfo = _a;\n                                    if (nftInfo) {\n                                        log(\"ethereum\", \"loaded nft info for \" +\n                                            nftInfo.contractAddress +\n                                            \" (\" +\n                                            nftInfo.collectionName +\n                                            \")\");\n                                        provideNFTInformation(nftInfo.data);\n                                    }\n                                    else {\n                                        erc20Info = byContractAddressAndChainId(address, chainIdTruncated);\n                                        if (erc20Info) {\n                                            log(\"ethereum\", \"loaded erc20token info for \" +\n                                                erc20Info.contractAddress +\n                                                \" (\" +\n                                                erc20Info.ticker +\n                                                \")\");\n                                            provideERC20TokenInformation(erc20Info.data.toString(\"hex\"));\n                                        }\n                                    }\n                                    return [2 /*return*/];\n                            }\n                        });\n                    }); };\n                    if (!(decodedTx.data.length >= 10)) return [3 /*break*/, 19];\n                    selector = decodedTx.data.substring(0, 10);\n                    if (!resolutionConfig.nft) return [3 /*break*/, 2];\n                    return [4 /*yield*/, loadNftPlugin(decodedTx.to, selector, chainIdTruncated, loadConfig)];\n                case 1:\n                    _b = _e.sent();\n                    return [3 /*break*/, 3];\n                case 2:\n                    _b = null;\n                    _e.label = 3;\n                case 3:\n                    nftPluginPayload = _b;\n                    if (!nftPluginPayload) return [3 /*break*/, 4];\n                    setPlugin(nftPluginPayload);\n                    return [3 /*break*/, 17];\n                case 4:\n                    if (!resolutionConfig.externalPlugins) return [3 /*break*/, 6];\n                    return [4 /*yield*/, loadInfosForContractMethod(decodedTx.to, selector, chainIdTruncated, loadConfig)];\n                case 5:\n                    _c = _e.sent();\n                    return [3 /*break*/, 7];\n                case 6:\n                    _c = null;\n                    _e.label = 7;\n                case 7:\n                    infos = _c;\n                    if (!infos) return [3 /*break*/, 16];\n                    plugin = infos.plugin, payload = infos.payload, signature = infos.signature, erc20OfInterest = infos.erc20OfInterest, abi = infos.abi;\n                    if (plugin) {\n                        log(\"ethereum\", \"found plugin for \" + selector);\n                        setExternalPlugin(payload, signature);\n                    }\n                    if (!(erc20OfInterest && erc20OfInterest.length && abi)) return [3 /*break*/, 15];\n                    contract = new Interface(abi);\n                    args = contract.parseTransaction(decodedTx).args;\n                    _e.label = 8;\n                case 8:\n                    _e.trys.push([8, 13, 14, 15]);\n                    erc20OfInterest_1 = __values(erc20OfInterest), erc20OfInterest_1_1 = erc20OfInterest_1.next();\n                    _e.label = 9;\n                case 9:\n                    if (!!erc20OfInterest_1_1.done) return [3 /*break*/, 12];\n                    path = erc20OfInterest_1_1.value;\n                    address = path.split(\".\").reduce(function (value, seg) {\n                        if (seg === \"-1\" && Array.isArray(value)) {\n                            return value[value.length - 1];\n                        }\n                        return value[seg];\n                    }, args);\n                    return [4 /*yield*/, provideForContract(address)];\n                case 10:\n                    _e.sent();\n                    _e.label = 11;\n                case 11:\n                    erc20OfInterest_1_1 = erc20OfInterest_1.next();\n                    return [3 /*break*/, 9];\n                case 12: return [3 /*break*/, 15];\n                case 13:\n                    e_1_1 = _e.sent();\n                    e_1 = { error: e_1_1 };\n                    return [3 /*break*/, 15];\n                case 14:\n                    try {\n                        if (erc20OfInterest_1_1 && !erc20OfInterest_1_1.done && (_d = erc20OfInterest_1[\"return\"])) _d.call(erc20OfInterest_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                    return [7 /*endfinally*/];\n                case 15: return [3 /*break*/, 17];\n                case 16:\n                    log(\"ethereum\", \"no infos for selector \" + selector);\n                    _e.label = 17;\n                case 17: return [4 /*yield*/, provideForContract(decodedTx.to)];\n                case 18:\n                    _e.sent();\n                    _e.label = 19;\n                case 19: return [2 /*return*/, resolution];\n            }\n        });\n    }); }\n};\nexport default ledgerService;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}