{"ast":null,"code":"\"use strict\";\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fromCallsToExecuteCalldata = exports.transformCallsToMulticallArrays = void 0;\n\nvar hash_1 = require(\"./hash\");\n\nvar number_1 = require(\"./number\");\n/**\n * Transforms a list of Calls, each with their own calldata, into\n * two arrays: one with the entrypoints, and one with the concatenated calldata.\n * @param calls\n * @returns\n */\n\n\nvar transformCallsToMulticallArrays = function (calls) {\n  var callArray = [];\n  var calldata = [];\n  calls.forEach(function (call) {\n    var data = call.calldata || [];\n    callArray.push({\n      to: (0, number_1.toBN)(call.contractAddress).toString(10),\n      selector: (0, number_1.toBN)((0, hash_1.getSelectorFromName)(call.entrypoint)).toString(10),\n      data_offset: calldata.length.toString(),\n      data_len: data.length.toString()\n    });\n    calldata.push.apply(calldata, __spreadArray([], __read(data), false));\n  });\n  return {\n    callArray: callArray,\n    calldata: (0, number_1.bigNumberishArrayToDecimalStringArray)(calldata)\n  };\n};\n\nexports.transformCallsToMulticallArrays = transformCallsToMulticallArrays;\n/**\n * Transforms a list of calls in the full flattened calldata expected\n * by the __execute__ protocol.\n * @param calls\n * @returns\n */\n\nvar fromCallsToExecuteCalldata = function (calls) {\n  var _a = (0, exports.transformCallsToMulticallArrays)(calls),\n      callArray = _a.callArray,\n      calldata = _a.calldata;\n\n  return __spreadArray(__spreadArray(__spreadArray([callArray.length.toString()], __read(callArray.map(function (_a) {\n    var to = _a.to,\n        selector = _a.selector,\n        data_offset = _a.data_offset,\n        data_len = _a.data_len;\n    return [to, selector, data_offset, data_len];\n  }).flat()), false), [calldata.length.toString()], false), __read(calldata), false);\n};\n\nexports.fromCallsToExecuteCalldata = fromCallsToExecuteCalldata;","map":{"version":3,"names":["__read","o","n","m","Symbol","iterator","i","call","r","ar","e","next","done","push","value","error","__spreadArray","to","from","pack","arguments","length","l","Array","prototype","slice","concat","Object","defineProperty","exports","fromCallsToExecuteCalldata","transformCallsToMulticallArrays","hash_1","require","number_1","calls","callArray","calldata","forEach","data","toBN","contractAddress","toString","selector","getSelectorFromName","entrypoint","data_offset","data_len","apply","bigNumberishArrayToDecimalStringArray","_a","map","flat"],"sources":["/Users/marijoradman/y22/miami6/miami-hackathon-starknet-p2e/node_modules/starknet/dist/utils/transaction.js"],"sourcesContent":["\"use strict\";\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromCallsToExecuteCalldata = exports.transformCallsToMulticallArrays = void 0;\nvar hash_1 = require(\"./hash\");\nvar number_1 = require(\"./number\");\n/**\n * Transforms a list of Calls, each with their own calldata, into\n * two arrays: one with the entrypoints, and one with the concatenated calldata.\n * @param calls\n * @returns\n */\nvar transformCallsToMulticallArrays = function (calls) {\n    var callArray = [];\n    var calldata = [];\n    calls.forEach(function (call) {\n        var data = call.calldata || [];\n        callArray.push({\n            to: (0, number_1.toBN)(call.contractAddress).toString(10),\n            selector: (0, number_1.toBN)((0, hash_1.getSelectorFromName)(call.entrypoint)).toString(10),\n            data_offset: calldata.length.toString(),\n            data_len: data.length.toString(),\n        });\n        calldata.push.apply(calldata, __spreadArray([], __read(data), false));\n    });\n    return {\n        callArray: callArray,\n        calldata: (0, number_1.bigNumberishArrayToDecimalStringArray)(calldata),\n    };\n};\nexports.transformCallsToMulticallArrays = transformCallsToMulticallArrays;\n/**\n * Transforms a list of calls in the full flattened calldata expected\n * by the __execute__ protocol.\n * @param calls\n * @returns\n */\nvar fromCallsToExecuteCalldata = function (calls) {\n    var _a = (0, exports.transformCallsToMulticallArrays)(calls), callArray = _a.callArray, calldata = _a.calldata;\n    return __spreadArray(__spreadArray(__spreadArray([\n        callArray.length.toString()\n    ], __read(callArray\n        .map(function (_a) {\n        var to = _a.to, selector = _a.selector, data_offset = _a.data_offset, data_len = _a.data_len;\n        return [to, selector, data_offset, data_len];\n    })\n        .flat()), false), [\n        calldata.length.toString()\n    ], false), __read(calldata), false);\n};\nexports.fromCallsToExecuteCalldata = fromCallsToExecuteCalldata;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}