{"ast":null,"code":"\"use strict\";\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hashMulticall = exports.computeHashOnElements = exports.pedersen = exports.getSelectorFromName = exports.starknetKeccak = exports.feeTransactionVersion = exports.transactionVersion = exports.transactionPrefix = void 0;\n\nvar keccak_1 = require(\"ethereum-cryptography/keccak\");\n\nvar minimalistic_assert_1 = __importDefault(require(\"minimalistic-assert\"));\n\nvar constants_1 = require(\"../constants\");\n\nvar ellipticCurve_1 = require(\"./ellipticCurve\");\n\nvar encode_1 = require(\"./encode\");\n\nvar number_1 = require(\"./number\");\n\nvar shortString_1 = require(\"./shortString\");\n\nexports.transactionPrefix = (0, shortString_1.encodeShortString)('StarkNet Transaction');\nexports.transactionVersion = 0;\nexports.feeTransactionVersion = (0, number_1.toBN)(2).pow((0, number_1.toBN)(128)).add((0, number_1.toBN)(exports.transactionVersion));\n\nfunction keccakHex(value) {\n  return (0, encode_1.addHexPrefix)((0, encode_1.buf2hex)((0, keccak_1.keccak256)((0, encode_1.utf8ToArray)(value))));\n}\n/**\n * Function to get the starknet keccak hash from a string\n *\n * [Reference](https://github.com/starkware-libs/cairo-lang/blob/master/src/starkware/starknet/public/abi.py#L17-L22)\n * @param value - string you want to get the starknetKeccak hash from\n * @returns starknet keccak hash as BigNumber\n */\n\n\nfunction starknetKeccak(value) {\n  return (0, number_1.toBN)(keccakHex(value)).and(constants_1.MASK_250);\n}\n\nexports.starknetKeccak = starknetKeccak;\n/**\n * Function to get the hex selector from a given function name\n *\n * [Reference](https://github.com/starkware-libs/cairo-lang/blob/master/src/starkware/starknet/public/abi.py#L25-L26)\n * @param funcName - selectors abi function name\n * @returns hex selector of given abi function name\n */\n\nfunction getSelectorFromName(funcName) {\n  // sometimes BigInteger pads the hex string with zeros, which isnt allowed in the starknet api\n  return (0, number_1.toHex)(starknetKeccak(funcName));\n}\n\nexports.getSelectorFromName = getSelectorFromName;\nvar constantPoints = constants_1.CONSTANT_POINTS.map(function (coords) {\n  return ellipticCurve_1.ec.curve.point(coords[0], coords[1]);\n});\n\nfunction pedersen(input) {\n  var point = constantPoints[0];\n\n  for (var i = 0; i < input.length; i += 1) {\n    var x = (0, number_1.toBN)(input[i]);\n    (0, minimalistic_assert_1.default)(x.gte(constants_1.ZERO) && x.lt((0, number_1.toBN)((0, encode_1.addHexPrefix)(constants_1.FIELD_PRIME))), \"Invalid input: \" + input[i]);\n\n    for (var j = 0; j < 252; j += 1) {\n      var pt = constantPoints[2 + i * 252 + j];\n      (0, minimalistic_assert_1.default)(!point.getX().eq(pt.getX()));\n\n      if (x.and(constants_1.ONE).toNumber() !== 0) {\n        point = point.add(pt);\n      }\n\n      x = x.shrn(1);\n    }\n  }\n\n  return (0, encode_1.addHexPrefix)(point.getX().toString(16));\n}\n\nexports.pedersen = pedersen;\n\nfunction computeHashOnElements(data) {\n  return __spreadArray(__spreadArray([], __read(data), false), [data.length], false).reduce(function (x, y) {\n    return pedersen([x, y]);\n  }, 0).toString();\n}\n\nexports.computeHashOnElements = computeHashOnElements;\n\nfunction hashMulticall(account, transactions, nonce, maxFee, version) {\n  if (version === void 0) {\n    version = exports.transactionVersion;\n  }\n\n  var hashArray = transactions.map(function (_a) {\n    var contractAddress = _a.contractAddress,\n        entrypoint = _a.entrypoint,\n        calldata = _a.calldata;\n    return [contractAddress, getSelectorFromName(entrypoint), computeHashOnElements(calldata || [])];\n  }).map(number_1.bigNumberishArrayToDecimalStringArray).map(computeHashOnElements);\n  return computeHashOnElements([exports.transactionPrefix, account, computeHashOnElements(hashArray), nonce, maxFee, version]);\n}\n\nexports.hashMulticall = hashMulticall;","map":{"version":3,"names":["__read","o","n","m","Symbol","iterator","i","call","r","ar","e","next","done","push","value","error","__spreadArray","to","from","pack","arguments","length","l","Array","prototype","slice","concat","__importDefault","mod","__esModule","Object","defineProperty","exports","hashMulticall","computeHashOnElements","pedersen","getSelectorFromName","starknetKeccak","feeTransactionVersion","transactionVersion","transactionPrefix","keccak_1","require","minimalistic_assert_1","constants_1","ellipticCurve_1","encode_1","number_1","shortString_1","encodeShortString","toBN","pow","add","keccakHex","addHexPrefix","buf2hex","keccak256","utf8ToArray","and","MASK_250","funcName","toHex","constantPoints","CONSTANT_POINTS","map","coords","ec","curve","point","input","x","default","gte","ZERO","lt","FIELD_PRIME","j","pt","getX","eq","ONE","toNumber","shrn","toString","data","reduce","y","account","transactions","nonce","maxFee","version","hashArray","_a","contractAddress","entrypoint","calldata","bigNumberishArrayToDecimalStringArray"],"sources":["/Users/marijoradman/y22/miami6/miami-hackathon-starknet-p2e/node_modules/starknet/dist/utils/hash.js"],"sourcesContent":["\"use strict\";\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hashMulticall = exports.computeHashOnElements = exports.pedersen = exports.getSelectorFromName = exports.starknetKeccak = exports.feeTransactionVersion = exports.transactionVersion = exports.transactionPrefix = void 0;\nvar keccak_1 = require(\"ethereum-cryptography/keccak\");\nvar minimalistic_assert_1 = __importDefault(require(\"minimalistic-assert\"));\nvar constants_1 = require(\"../constants\");\nvar ellipticCurve_1 = require(\"./ellipticCurve\");\nvar encode_1 = require(\"./encode\");\nvar number_1 = require(\"./number\");\nvar shortString_1 = require(\"./shortString\");\nexports.transactionPrefix = (0, shortString_1.encodeShortString)('StarkNet Transaction');\nexports.transactionVersion = 0;\nexports.feeTransactionVersion = (0, number_1.toBN)(2).pow((0, number_1.toBN)(128)).add((0, number_1.toBN)(exports.transactionVersion));\nfunction keccakHex(value) {\n    return (0, encode_1.addHexPrefix)((0, encode_1.buf2hex)((0, keccak_1.keccak256)((0, encode_1.utf8ToArray)(value))));\n}\n/**\n * Function to get the starknet keccak hash from a string\n *\n * [Reference](https://github.com/starkware-libs/cairo-lang/blob/master/src/starkware/starknet/public/abi.py#L17-L22)\n * @param value - string you want to get the starknetKeccak hash from\n * @returns starknet keccak hash as BigNumber\n */\nfunction starknetKeccak(value) {\n    return (0, number_1.toBN)(keccakHex(value)).and(constants_1.MASK_250);\n}\nexports.starknetKeccak = starknetKeccak;\n/**\n * Function to get the hex selector from a given function name\n *\n * [Reference](https://github.com/starkware-libs/cairo-lang/blob/master/src/starkware/starknet/public/abi.py#L25-L26)\n * @param funcName - selectors abi function name\n * @returns hex selector of given abi function name\n */\nfunction getSelectorFromName(funcName) {\n    // sometimes BigInteger pads the hex string with zeros, which isnt allowed in the starknet api\n    return (0, number_1.toHex)(starknetKeccak(funcName));\n}\nexports.getSelectorFromName = getSelectorFromName;\nvar constantPoints = constants_1.CONSTANT_POINTS.map(function (coords) {\n    return ellipticCurve_1.ec.curve.point(coords[0], coords[1]);\n});\nfunction pedersen(input) {\n    var point = constantPoints[0];\n    for (var i = 0; i < input.length; i += 1) {\n        var x = (0, number_1.toBN)(input[i]);\n        (0, minimalistic_assert_1.default)(x.gte(constants_1.ZERO) && x.lt((0, number_1.toBN)((0, encode_1.addHexPrefix)(constants_1.FIELD_PRIME))), \"Invalid input: \" + input[i]);\n        for (var j = 0; j < 252; j += 1) {\n            var pt = constantPoints[2 + i * 252 + j];\n            (0, minimalistic_assert_1.default)(!point.getX().eq(pt.getX()));\n            if (x.and(constants_1.ONE).toNumber() !== 0) {\n                point = point.add(pt);\n            }\n            x = x.shrn(1);\n        }\n    }\n    return (0, encode_1.addHexPrefix)(point.getX().toString(16));\n}\nexports.pedersen = pedersen;\nfunction computeHashOnElements(data) {\n    return __spreadArray(__spreadArray([], __read(data), false), [data.length], false).reduce(function (x, y) { return pedersen([x, y]); }, 0).toString();\n}\nexports.computeHashOnElements = computeHashOnElements;\nfunction hashMulticall(account, transactions, nonce, maxFee, version) {\n    if (version === void 0) { version = exports.transactionVersion; }\n    var hashArray = transactions\n        .map(function (_a) {\n        var contractAddress = _a.contractAddress, entrypoint = _a.entrypoint, calldata = _a.calldata;\n        return [\n            contractAddress,\n            getSelectorFromName(entrypoint),\n            computeHashOnElements(calldata || []),\n        ];\n    })\n        .map(number_1.bigNumberishArrayToDecimalStringArray)\n        .map(computeHashOnElements);\n    return computeHashOnElements([\n        exports.transactionPrefix,\n        account,\n        computeHashOnElements(hashArray),\n        nonce,\n        maxFee,\n        version,\n    ]);\n}\nexports.hashMulticall = hashMulticall;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}